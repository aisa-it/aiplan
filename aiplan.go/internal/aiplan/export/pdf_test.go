// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç Issue –≤ PDF-—Ñ–∞–π–ª.
//
// –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
//   - –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ Issue –≤ PDF —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º HTML-—Ä–∞–∑–º–µ—Ç–∫–∏.
//   - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —É–∫–∞–∑–∞–Ω–∏—è URL –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ PDF-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞.
//   - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫ Issue –≤ PDF.
package export

import (
	"fmt"
	"net/url"
	"os"
	"testing"
	"time"

	"github.com/aisa-it/aiplan/internal/aiplan/dao"
	"github.com/aisa-it/aiplan/internal/aiplan/types"
)

func TestFPDF(t *testing.T) {
	p := "urgent"
	issue := dao.Issue{
		SequenceId: 12,
		Priority:   &p,
		Project: &dao.Project{
			Identifier: "BAK",
		},
		CreatedAt: time.Now().Add(time.Minute * -5),
		UpdatedAt: time.Now(),
		Author: &dao.User{
			FirstName: "–ò",
			LastName:  "–ü",
		},
		State: &dao.State{
			Name:  "–ù–æ–≤–∞—è",
			Color: "#26b5ce",
		},
		Assignees: &[]dao.User{
			{FirstName: "–ü–∞–≤–µ–ª", LastName: "–ü–µ—Ç—Ä–æ–≤"},
			{FirstName: "–ò–≤–∞–Ω", LastName: "–ò–≤–∞–Ω–æ–≤"},
		},
		Name:            "–£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞, –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–∑ Jira (–∂–∏—Ä—ã)",
		DescriptionHtml: `<table style="width: 623px"><colgroup><col style="width: 105px"><col style="width: 188px"><col style="width: 192px"><col style="width: 138px"></colgroup><tbody><tr><th colspan="1" rowspan="1" colwidth="105"><p>–ó–∞–≥–æ–ª–æ–≤–æ–∫</p></th><th colspan="1" rowspan="1" colwidth="188"><p>–ó–∞–≥–æ–ª–æ–≤–æ–∫ 2 üòã</p></th><th colspan="1" rowspan="1" colwidth="192"><p>–ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª–∏–Ω–Ω—ã–π –≤–∞—â–µ –ø–∏–ø–µ—Ü</p></th><th colspan="1" rowspan="1" colwidth="138"><p>–ú–µ–ª–∫–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫</p></th></tr><tr><td colspan="1" rowspan="1" colwidth="105"><p>—Ç–µ–∫—Å—Ç</p><p><mark data-color="rgb(0,245,123)" style="background-color: rgb(0,245,123); color: inherit">–ø–∞—Ä–∞–≥—Ä–∞—Ñ</mark></p></td><td colspan="1" rowspan="1" colwidth="188"><p>—ã–≤–∞—ã–≤–∞</p></td><td colspan="1" rowspan="1" colwidth="192"><p><img src="/api/file/5ccf6647-6735-4137-a017-dcae0af1c994-0" alt="2" style="height: auto;" draggable="true"></p></td><td colspan="1" rowspan="1" colwidth="138"><p>—ã–≤–∞—ã–≤–∞</p></td></tr><tr><td colspan="1" rowspan="1" colwidth="105"><p>—ã–≤–∞—ã–≤–∞</p></td><td colspan="1" rowspan="1" colwidth="188"><p>—ã–≤–∞—ã–≤–∞</p></td><td colspan="1" rowspan="1" colwidth="192"><p></p></td><td colspan="1" rowspan="1" colwidth="138"><p>—ã–≤–∞—ã–≤–∞—ã–∞–≤</p></td></tr></tbody></table>`,
	}

	u, _ := url.Parse("http://localhost:9200")

	os.Remove("output.pdf")
	f, _ := os.Create("output.pdf")
	fmt.Println(IssueToFPDF(&issue, u, f, dao.IssueComment{
		Actor: &dao.User{
			FirstName: "–ò",
			LastName:  "–ü",
		},
		CreatedAt:   time.Now(),
		CommentHtml: types.RedactorHTML{Body: `<table style="width: 623px"><colgroup><col style="width: 105px"><col style="width: 188px"><col style="width: 192px"><col style="width: 138px"></colgroup><tbody><tr><th colspan="1" rowspan="1" colwidth="105"><p>–ó–∞–≥–æ–ª–æ–≤–æ–∫</p></th><th colspan="1" rowspan="1" colwidth="188"><p>–ó–∞–≥–æ–ª–æ–≤–æ–∫ 2 üòã</p></th><th colspan="1" rowspan="1" colwidth="192"><p>–ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª–∏–Ω–Ω—ã–π –≤–∞—â–µ –ø–∏–ø–µ—Ü</p></th><th colspan="1" rowspan="1" colwidth="138"><p>–ú–µ–ª–∫–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫</p></th></tr><tr><td colspan="1" rowspan="1" colwidth="105"><p>—Ç–µ–∫—Å—Ç</p><p><mark data-color="rgb(0,245,123)" style="background-color: rgb(0,245,123); color: inherit">–ø–∞—Ä–∞–≥—Ä–∞—Ñ</mark></p></td><td colspan="1" rowspan="1" colwidth="188"><p>—ã–≤–∞—ã–≤–∞</p></td><td colspan="1" rowspan="1" colwidth="192"><p><img src="/api/file/5ccf6647-6735-4137-a017-dcae0af1c994-0" alt="2" style="height: auto;" draggable="true"></p></td><td colspan="1" rowspan="1" colwidth="138"><p>—ã–≤–∞—ã–≤–∞</p></td></tr><tr><td colspan="1" rowspan="1" colwidth="105"><p>—ã–≤–∞—ã–≤–∞</p></td><td colspan="1" rowspan="1" colwidth="188"><p>—ã–≤–∞—ã–≤–∞</p></td><td colspan="1" rowspan="1" colwidth="192"><p></p></td><td colspan="1" rowspan="1" colwidth="138"><p>—ã–≤–∞—ã–≤–∞—ã–∞–≤</p></td></tr></tbody></table>`},
	},
		dao.IssueComment{
			Actor: &dao.User{
				FirstName: "–ò",
				LastName:  "–ü",
			},
			CreatedAt:   time.Now(),
			CommentHtml: types.RedactorHTML{Body: `<p>–ù<span style="font-size: 14px">–∞ —Ç–µ—Å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ</span></p>`},
		}))
	f.Close()
}
