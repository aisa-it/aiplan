{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server.",
        "title": "My API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/api/auth/admin/activities/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список активностей верхнего уровня с поддержкой пагинации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Активности: получение активностей верхнего уровня",
                "operationId": "geRootActivityList",
                "parameters": [
                    {
                        "type": "string",
                        "default": "\"\"",
                        "description": "День выборки активностей",
                        "name": "day",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": -1,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Количество результатов на странице",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список активностей",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.EntityActivityFull"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/admin/feedbacks": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех отзывов пользователей с поддержкой пагинации, сортировки и фильтрации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Feedback: получение всех отзывов пользователей",
                "operationId": "getAllFeedbackList",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Количество результатов на странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поле для сортировки",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Направление сортировки: true - по убыванию, false - по возрастанию",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список отзывов пользователей",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.UserFeedback"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/admin/feedbacks/export": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Экспортирует отзывы пользователей в сжатом CSV файле",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/gzip"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Feedback: экспорт отзывов пользователей",
                "operationId": "exportFeedbackList",
                "responses": {
                    "200": {
                        "description": "Отчёт успешно экспортирован"
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/admin/imports/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "получение текущих импортов в активном статусе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "templates: список текущих импортов",
                "operationId": "getRunningImportList",
                "responses": {
                    "200": {
                        "description": "Статусы импортов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/issues_import.ImportStatus"
                            }
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/admin/projects/{workspaceId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список проектов внутри указанного рабочего пространства с поддержкой пагинации, сортировки и поиска",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Проекты: получение проектов рабочего пространства",
                "operationId": "getWorkspaceProjectList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID рабочего пространства",
                        "name": "workspaceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Количество результатов на странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поле для сортировки",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Направление сортировки: true - по убыванию, false - по возрастанию",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Строка для поиска",
                        "name": "search_query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список проектов рабочего пространства",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.Project"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Рабочее пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/admin/release-notes": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает новое примечание к релизу",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Релизы: создание примечания к релизу",
                "operationId": "createReleaseNote",
                "parameters": [
                    {
                        "description": "Данные примечании к релизу. ID, TagName, PublishedAt и AuthorId проставляются автоматически.",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ReleaseNoteLight"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Примечание к релизу успешно создано"
                    },
                    "400": {
                        "description": "Некорректные данные запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/admin/release-notes/{noteId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает информацию о примечании к релизу по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReleaseNotes"
                ],
                "summary": "Релизы: получение примечания к релизу",
                "operationId": "getReleaseNote",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID или версия релиза примечания к релизу",
                        "name": "noteId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о примечании к релизу",
                        "schema": {
                            "$ref": "#/definitions/dto.ReleaseNoteLight"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Примечание к релизу не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет примечание к релизу по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Релизы: удаление примечания к релизу",
                "operationId": "deleteReleaseNote",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID примечания к релизу",
                        "name": "noteId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Примечание к релизу успешно удалено"
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Примечание к релизу не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет информацию о примечании к релизу",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Релизы: редактирование примечания к релизу",
                "operationId": "updateReleaseNote",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID примечания к релизу",
                        "name": "noteId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления примечания к релизу",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ReleaseNoteLight"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленное примечание к релизу",
                        "schema": {
                            "$ref": "#/definitions/dto.ReleaseNoteLight"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Примечание к релизу не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/admin/tariffication/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список тарифов с возможностью сортировки, фильтрации и пагинации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Tariffs: получить список тарифов",
                "operationId": "getAllTariffList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Поле для сортировки (по умолчанию user_id)",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение (пагинация) (-1 для начала)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Лимит записей (максимум 1000, по умолчанию 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Сортировка по убыванию (по умолчанию true)",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Строка поиска (по email, имени или фамилии)",
                        "name": "search_query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список тарифов успешно получен",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.Tariffication"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Ошибка в параметрах запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создаёт новый тариф для пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Tariffs: создать новый тариф",
                "operationId": "createUserTariff",
                "parameters": [
                    {
                        "description": "Данные нового тарифа",
                        "name": "tariff",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Tariffication"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Тариф успешно создан",
                        "schema": {
                            "$ref": "#/definitions/dto.Tariffication"
                        }
                    },
                    "400": {
                        "description": "Ошибка в параметрах запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "409": {
                        "description": "Ошибка: тариф уже существует",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/admin/tariffication/{userId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает тариф, связанный с указанным пользователем",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Tariffs: получить тариф пользователя",
                "operationId": "getUserTariff",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Тариф успешно найден",
                        "schema": {
                            "$ref": "#/definitions/dto.Tariffication"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: тариф не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет данные существующего тарифа",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Tariffs: обновить тариф пользователя",
                "operationId": "updateUserTariff",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления тарифа",
                        "name": "tariff",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Tariffication"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Тариф успешно обновлён",
                        "schema": {
                            "$ref": "#/definitions/dto.Tariffication"
                        }
                    },
                    "400": {
                        "description": "Ошибка в параметрах запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "409": {
                        "description": "Ошибка: тариф уже существует",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет тариф, связанный с указанным пользователем",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Tariffs: удалить тариф пользователя",
                "operationId": "deleteUserTariff",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Тариф успешно удалён"
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: тариф не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/admin/templates/reset/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "сброс шаблонов почты к установкам по умолчанию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "templates: сброс",
                "operationId": "reloadTemplates",
                "responses": {
                    "200": {
                        "description": "Сброс успешно завершен"
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/admin/users": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех пользователей с поддержкой пагинации, сортировки и поиска",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Пользователи: получение всех пользователей",
                "operationId": "getAllUserList",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Количество результатов на странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поле для сортировки",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Направление сортировки: true - по убыванию, false - по возрастанию",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Строка для поиска",
                        "name": "search_query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список пользователей",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.UserLight"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает нового пользователя и добавляет его в рабочее пространство при необходимости",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Пользователи: создание пользователя",
                "operationId": "createUser",
                "parameters": [
                    {
                        "description": "Данные для создания пользователя",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Созданный пользователь",
                        "schema": {
                            "$ref": "#/definitions/dto.UserLight"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные пользователя",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "409": {
                        "description": "Пользователь с таким email уже существует",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/admin/users/message/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет отправить сообщение всем или выбранным пользователям. Поддерживается отправка отложенных сообщений.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Пользователи: Отправка сообщения",
                "operationId": "createMessageForMember",
                "parameters": [
                    {
                        "description": "Информация о сообщении",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.requestMessage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Сообщения успешно отправлены"
                    },
                    "400": {
                        "description": "Некорректные данные запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/admin/users/{userId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает информацию о пользователе по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Пользователи: получение пользователя по ID",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о пользователе",
                        "schema": {
                            "$ref": "#/definitions/dto.UserLight"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет пользователя по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Пользователи: удаление пользователя",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь успешно удален"
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет информацию о пользователе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Пользователи: изменение пользователя",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления пользователя",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленный пользователь",
                        "schema": {
                            "$ref": "#/definitions/dto.UserLight"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные для обновления",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/admin/users/{userId}/feedback": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает отзыв пользователя по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Пользователи: получение отзыва пользователя",
                "operationId": "getUserFeedback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Отзыв пользователя",
                        "schema": {
                            "$ref": "#/definitions/dto.UserFeedback"
                        }
                    },
                    "204": {
                        "description": "Отзыв не найден"
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/admin/users/{userId}/workspaces": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список рабочих пространств, к которым принадлежит пользователь, с поддержкой пагинации, сортировки и поиска",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Пользователи: получение пространств пользователя",
                "operationId": "geWorkspaceListByUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Количество результатов на странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Все пространства, или где состоит пользователь",
                        "name": "all",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поле для сортировки",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Направление сортировки: true - по убыванию, false - по возрастанию",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Строка для поиска",
                        "name": "search_query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список рабочих пространств",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.Workspace"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/admin/users/{userId}/workspaces/{workspaceId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список проектов пользователя в указанном рабочем пространстве с поддержкой пагинации, сортировки и поиска",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Пользователи: получение проектов пользователя в рабочем пространстве",
                "operationId": "getProjectListByUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID рабочего пространства",
                        "name": "workspaceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Количество результатов на странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Все проекты, или где состоит пользователь",
                        "name": "all",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поле для сортировки",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Направление сортировки: true - по убыванию, false - по возрастанию",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Строка для поиска",
                        "name": "search_query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список проектов пользователя",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.ProjectLight"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/admin/users/{userId}/workspaces/{workspaceId}/member/": {
            "post": {
                "description": "Метод позволяет обновить роль участника рабочего пространства. Если участник отсутствует, он будет создан.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Пользователи: Обновить роль участника пространства",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID рабочего пространства",
                        "name": "workspaceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Роль участника",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.roleUpdRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Роль успешно обновлена"
                    },
                    "400": {
                        "description": "Некорректные данные или отсутствует роль",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Рабочее пространство или пользователь не найдены",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет участника рабочего пространства, а также все его связи с проектами внутри данного пространства.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Пользователи: Удалить участника пространства",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID рабочего пространства",
                        "name": "workspaceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Участник успешно удален"
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Участник рабочего пространства не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/admin/users/{userId}/workspaces/{workspaceId}/projects/{projectId}/member/": {
            "post": {
                "description": "Метод обновляет роль участника проекта в рамках рабочего пространства. Если участник не найден в проекте, он будет создан. Проверяется, что участник является членом рабочего пространства.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Пользователи: Обновить роль участника проекта",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID рабочего пространства",
                        "name": "workspaceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Роль участника проекта",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.roleUpdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Роль успешно обновлена"
                    },
                    "400": {
                        "description": "Некорректные данные или отсутствует роль",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Рабочее пространство, проект или участник не найдены",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Метод удаляет участника проекта из рабочего пространства. Если участник не найден в проекте, возвращается ошибка.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Пользователи: Удалить участника проекта",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID рабочего пространства",
                        "name": "workspaceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Участник успешно удален из проекта"
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Рабочее пространство, проект или участник не найдены",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/admin/workspaces": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех рабочих пространств с поддержкой пагинации, сортировки и поиска",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AdminPanel"
                ],
                "summary": "Пространство: получение всех рабочих пространств",
                "operationId": "getAllWorkspaceList",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Количество результатов на странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поле для сортировки",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Направление сортировки: true - по убыванию, false - по возрастанию",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Строка для поиска",
                        "name": "search_query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список рабочих пространств",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.WorkspaceWithCount"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/change-my-password/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет текущему пользователю изменить свой пароль. В случае успеха завершает все активные сеансы пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи (управление доступом): смена пароля текущего пользователя",
                "operationId": "updateMyPassword",
                "parameters": [
                    {
                        "description": "Новые данные пароля",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.PasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пароль успешно изменен",
                        "schema": {
                            "$ref": "#/definitions/aiplan.PasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Пароли не совпадают или некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/filters/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список доступных фильтров поиска с возможностью пагинации и поиска по имени",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search Filters"
                ],
                "summary": "Фильтры: получение списка доступных фильтров поиска",
                "operationId": "getSearchFilterList",
                "parameters": [
                    {
                        "type": "integer",
                        "default": -1,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Лимит результатов",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Строка поиска по имени фильтра",
                        "name": "search_query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список доступных фильтров поиска",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.SearchFilterLight"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает новый фильтр поиска для текущего пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search Filters"
                ],
                "summary": "Фильтры: создание нового фильтра поиска",
                "operationId": "createSearchFilter",
                "parameters": [
                    {
                        "description": "Данные нового фильтра поиска",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchFilterLight"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданный фильтр поиска",
                        "schema": {
                            "$ref": "#/definitions/dto.SearchFilterFull"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/filters/labels/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список тегов для указанных проектов с возможностью поиска по названию тега или проекта",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты: получение списка тегов (меток) выбранных проектов",
                "operationId": "getFilterLabelList",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Лимит записей",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Параметры фильтрации тегов",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.FilterParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список тегов проектов",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.LabelLight"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/filters/members/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список участников (пользователей) для указанных проектов с возможностью поиска по имени пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты: получение списка участников выбранных проектов",
                "operationId": "getFilterMemberList",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Лимит записей",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Параметры фильтрации участников",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.FilterParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список участников проектов",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.UserLight"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/filters/states/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список статусов для указанных проектов с возможностью поиска по названию статуса или проекта",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты: получение списка статусов выбранных проектов",
                "operationId": "getFilterStateList",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Лимит записей",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Параметры фильтрации статусов",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.FilterParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список статусов проектов",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.StateLight"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/filters/{filterId}/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает данные фильтра поиска по его ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search Filters"
                ],
                "summary": "Фильтры: получение фильтра поиска",
                "operationId": "getSearchFilter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID фильтра поиска",
                        "name": "filterId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Фильтр поиска",
                        "schema": {
                            "$ref": "#/definitions/dto.SearchFilterFull"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Недостаточно прав для доступа к фильтру",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Фильтр не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет фильтр поиска по его ID для текущего пользователя или суперпользователя",
                "tags": [
                    "Search Filters"
                ],
                "summary": "Фильтры: удаление фильтра поиска",
                "operationId": "deleteSearchFilter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID фильтра поиска",
                        "name": "filterId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Фильтр успешно удален"
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Недостаточно прав для удаления фильтра",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет фильтр поиска по его ID для текущего пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search Filters"
                ],
                "summary": "Фильтры: обновление фильтра поиска",
                "operationId": "updateSearchFilter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID фильтра поиска",
                        "name": "filterId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления фильтра",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchFilterLight"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Фильтр успешно обновлен"
                    },
                    "400": {
                        "description": "Некорректные данные для обновления",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Недостаточно прав для обновления фильтра",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/forgot-password/": {
            "post": {
                "description": "Отправляет запрос на восстановление пароля для указанного email. Возвращает статус 200 даже если пользователь не найден или неактивен для повышения безопасности.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи (управление доступом): запрос на восстановление пароля",
                "operationId": "forgotPassword",
                "parameters": [
                    {
                        "description": "Данные для восстановления пароля",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.EmailCaptchaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Запрос на восстановление пароля успешно отправлен"
                    },
                    "400": {
                        "description": "Некорректные данные запроса или ошибка капчи",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/forms/{formSlug}/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Получает информацию о форме, требующей аутентификации для ответов.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forms"
                ],
                "summary": "формы: получить форму (аутентификация)",
                "operationId": "getFormAuth",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug формы",
                        "name": "formSlug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о форме",
                        "schema": {
                            "$ref": "#/definitions/dto.Form"
                        }
                    },
                    "403": {
                        "description": "Требуется аутентификация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Форма не найдена",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/forms/{formSlug}/answer/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отправляет ответ на форму, требующую аутентификации.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forms"
                ],
                "summary": "ответы: Отправить ответ (аутентифицированный)",
                "operationId": "createAnswerAuth",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug формы",
                        "name": "formSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные ответа",
                        "name": "answer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/aiplan.reqAnswer"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Отправленный ответ",
                        "schema": {
                            "$ref": "#/definitions/aiplan.respAnswers"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации ответа",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Требуется аутентификация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Форма не найдена",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/forms/{formSlug}/form-attachments/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Загружает новое вложение в ответ формы",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forms"
                ],
                "summary": "вложения: загрузка вложения в ответ формы",
                "operationId": "createFormAttachments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Slug формы",
                        "name": "formSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Файл для загрузки",
                        "name": "asset",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданное вложение",
                        "schema": {
                            "$ref": "#/definitions/dto.Attachment"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/forms/{formSlug}/form-attachments/{attachmentId}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет указанное вложение, прикрепленное к документу",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "Doc (вложения): удаление вложения из документа",
                "operationId": "deleteFormAttachment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Slug формы",
                        "name": "formSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID вложения",
                        "name": "attachmentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Вложение успешно удалено"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/import/jira/cancel/{importId}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Отменяет запущенный импорт",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Integrations"
                ],
                "summary": "Интеграции (Jira): отмена запущенного импорта",
                "operationId": "cancelJiraImport",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID импорта",
                        "name": "importId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Успешная отмена импорта"
                    },
                    "400": {
                        "description": "Некорректный ID импорта",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Неавторизованный доступ",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Импорт не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/import/jira/info": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает информацию о Jira на основе предоставленных учетных данных и URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Integrations"
                ],
                "summary": "Интеграции (Jira): получение информации о Jira",
                "operationId": "getJiraInfo",
                "parameters": [
                    {
                        "description": "Данные для получения информации о Jira",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.JiraInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о Jira",
                        "schema": {
                            "$ref": "#/definitions/entity.JiraInfo"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Неавторизованный доступ",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/import/jira/start/{projectKey}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Запускает процесс импорта проекта из Jira в указанное рабочее пространство",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Integrations"
                ],
                "summary": "Интеграции (Jira): начало импорта проекта из Jira",
                "operationId": "startJiraImport",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ключ проекта в Jira",
                        "name": "projectKey",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для импорта проекта из Jira",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.JiraInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID импорта и сообщение о запуске",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные данные запроса или конфликт проекта",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Неавторизованный доступ",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Отсутствие прав для выполнения импорта",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/import/jira/status": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех импортов, инициированных текущим пользователем",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Integrations"
                ],
                "summary": "Интеграции (Jira): получение моих импортов",
                "operationId": "getMyImportList",
                "responses": {
                    "200": {
                        "description": "Список импортов пользователя",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Неавторизованный доступ",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/import/jira/status/{importId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает статус конкретного импорта по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Integrations"
                ],
                "summary": "Интеграции (Jira): получение статуса импорта из Jira",
                "operationId": "getJiraImportStatus",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID импорта",
                        "name": "importId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Статус импорта",
                        "schema": {
                            "$ref": "#/definitions/issues_import.ImportStatus"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID импорта",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Неавторизованный доступ",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Импорт не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/issues/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Выполняет поиск задач с использованием фильтров и сортировки",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: поиск задач",
                "operationId": "getIssueList",
                "parameters": [
                    {
                        "type": "boolean",
                        "default": true,
                        "description": "Включать подзадачи",
                        "name": "show_sub_issues",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"sequence_id\"",
                        "description": "Поле для сортировки",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"\"",
                        "description": "Поле для группировки результатов",
                        "name": "group_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": -1,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Лимит записей",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": true,
                        "description": "Сортировка по убыванию",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Вернуть только количество",
                        "name": "only_count",
                        "in": "query"
                    },
                    {
                        "description": "Фильтры для поиска задач",
                        "name": "filters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/types.IssuesListFilters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Результат поиска задач",
                        "schema": {
                            "$ref": "#/definitions/dto.IssueSearchResult"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/notification-bot-link/": {
            "get": {
                "description": "Возвращает ссылку для подключения к Telegram боту уведомлений, если он доступен",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Integrations"
                ],
                "summary": "Интеграции: получение ссылки на Telegram бота",
                "operationId": "getTGBotLink",
                "responses": {
                    "200": {
                        "description": "Поле 'disabled': true, если бот недоступен",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/release-notes/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список обновлений",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReleaseNotes"
                ],
                "summary": "Релизы: получение списка обновлений",
                "operationId": "getProductUpdateList",
                "responses": {
                    "200": {
                        "description": "Список обновлений",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ReleaseNoteLight"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении обновлений",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/release-notes/{noteId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает информацию о примечаниях к релизу",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReleaseNotes"
                ],
                "summary": "Релизы: получение примечаний к релизу начиная с указанной версии",
                "operationId": "getRecentReleaseNoteList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID или версия релиза примечания к релизу",
                        "name": "noteId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о примечании к релизу",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ReleaseNoteLight"
                            }
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/reset-password/{uidb64}/{token}/": {
            "post": {
                "description": "Позволяет пользователю сбросить пароль после перехода по ссылке из письма. Сбрасывает все активные сеансы пользователя после успешного обновления пароля.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи (управление доступом): сброс пароля по ссылке из почты",
                "operationId": "resetPassword",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя в формате base64",
                        "name": "uidb64",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Токен для сброса пароля",
                        "name": "token",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Новые данные пароля",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.PasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пароль успешно сброшен",
                        "schema": {
                            "$ref": "#/definitions/aiplan.PasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Пароли не совпадают или некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Невалидный токен сброса пароля",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/reset-user-password/{uidb64}/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет суперпользователю изменить пароль другого пользователя, идентифицированного через `uidb64`.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи (управление доступом): смена пароля другого пользователя (только для суперпользователя)",
                "operationId": "resetUserPassword",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя в формате base64",
                        "name": "uidb64",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Новые данные пароля",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.PasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пароль успешно изменен",
                        "schema": {
                            "$ref": "#/definitions/aiplan.PasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Пароли не совпадают или некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/sign-out-everywhere/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Завершает все активные сессии пользователя, обновляя время и IP последнего выхода. Если refresh-токен отсутствует, возвращает ошибку.",
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи (управление доступом): выход из всех сессий",
                "operationId": "signOutEverywhere",
                "responses": {
                    "200": {
                        "description": "Успешный выход из всех сессий"
                    },
                    "400": {
                        "description": "Требуется refresh-токен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/sign-out/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Завершает текущую сессию пользователя, обновляя время и IP последнего выхода. Если refresh-токен отсутствует, возвращает ошибку.",
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи (управление доступом): выход из текущей сессии",
                "operationId": "signOut",
                "responses": {
                    "200": {
                        "description": "Успешный выход из текущей сессии"
                    },
                    "400": {
                        "description": "Требуется refresh-токен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/users/:userId/activities/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список последних 100 действий текущего пользователя из смежных пространств с текущим пользователем, если он не суперюзер",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи: получение последних действий указанного пользователя",
                "operationId": "getUserActivityList",
                "parameters": [
                    {
                        "type": "string",
                        "default": "\"\"",
                        "description": "ID пользователь",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "\"\"",
                        "description": "День выборки активностей",
                        "name": "day",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": -1,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Лимит результатов",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список действий пользователя",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.EntityActivityFull"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/users/last-visited-workspace": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает информацию о последнем посещенном рабочем пространстве пользователя. Если ID последнего рабочего пространства отсутствует, возвращает пустые данные.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство: получение последнего посещенного рабочего пространства",
                "operationId": "getLastVisitedWorkspace",
                "responses": {
                    "200": {
                        "description": "Детали последнего рабочего пространства и проекта",
                        "schema": {
                            "$ref": "#/definitions/aiplan.responseLastWorkspace"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/users/me/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает информацию о текущем пользователе",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи: получение данных о текущем пользователе",
                "operationId": "getCurrentUser",
                "responses": {
                    "200": {
                        "description": "Информация о текущем пользователе",
                        "schema": {
                            "$ref": "#/definitions/dto.User"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет информацию о текущем пользователе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи: обновление данных о текущем пользователе",
                "operationId": "updateCurrentUser",
                "parameters": [
                    {
                        "description": "Данные для обновления пользователя",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.UserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленные данные пользователя",
                        "schema": {
                            "$ref": "#/definitions/dto.User"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "409": {
                        "description": "Конфликт имени пользователя",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/users/me/activities/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список последних 100 действий текущего пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи: получение последних действий пользователя",
                "operationId": "getMyActivityList",
                "parameters": [
                    {
                        "type": "string",
                        "default": "\"\"",
                        "description": "День выборки активностей",
                        "name": "day",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": -1,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Лимит результатов",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Workspace IDs",
                        "name": "workspace",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Project IDs",
                        "name": "project",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список действий пользователя",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.EntityActivityFull"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/users/me/activities/table/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает таблицу активностей пользователя за указанный период.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи: получение таблицы активностей пользователя",
                "operationId": "getMyActivitiesTable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Начальная дата периода в формате YYYY-MM-DD",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Конечная дата периода в формате YYYY-MM-DD",
                        "name": "to",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Workspace IDs",
                        "name": "workspace",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Project IDs",
                        "name": "project",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Таблица активностей пользователя",
                        "schema": {
                            "$ref": "#/definitions/types.ActivityTable"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима аутентификация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/users/me/all/projects/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех проектов, к которым принадлежит текущий пользователь, с возможностью поиска по имени",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи: получение всех проектов текущего пользователя",
                "operationId": "getCurrentUserAllProjectList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Строка поиска по имени проекта",
                        "name": "search_query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список проектов пользователя",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ProjectLight"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/users/me/avatar/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет аватар текущего пользователя",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи: обновление аватара текущего пользователя",
                "operationId": "updateCurrentUserAvatar",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Файл аватара",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленные данные пользователя",
                        "schema": {
                            "$ref": "#/definitions/dto.User"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет аватар текущего пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи: удаление аватара текущего пользователя",
                "operationId": "deleteCurrentUserAvatar",
                "responses": {
                    "200": {
                        "description": "Обновленные данные пользователя",
                        "schema": {
                            "$ref": "#/definitions/dto.User"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/users/me/feedback/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает отзыв, оставленный текущим пользователем",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи: получение отзыва текущего пользователя",
                "operationId": "getMyFeedback",
                "responses": {
                    "200": {
                        "description": "Отзыв пользователя",
                        "schema": {
                            "$ref": "#/definitions/dto.UserFeedback"
                        }
                    },
                    "204": {
                        "description": "Отзыв не найден"
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Сохраняет или обновляет отзыв, предоставленный текущим пользователем",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи: отправка отзыва от текущего пользователя",
                "operationId": "createMyFeedback",
                "parameters": [
                    {
                        "description": "Данные отзыва",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.PostFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Отзыв успешно обновлен"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет отзыв, предоставленную текущим пользователем",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи: удаление отзыва текущего пользователя",
                "operationId": "deleteMyFeedback",
                "responses": {
                    "200": {
                        "description": "Отзыв успешно удален"
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/users/me/filters/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список фильтров поиска, созданных текущим пользователем",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search Filters"
                ],
                "summary": "Фильтры: получение фильтров поиска текущего пользователя",
                "operationId": "getMySearchFilterList",
                "responses": {
                    "200": {
                        "description": "Список фильтров поиска пользователя",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.SearchFilterFull"
                            }
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/users/me/filters/{filterId}/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Добавляет указанный фильтр поиска в список доступных фильтров текущего пользователя",
                "tags": [
                    "Search Filters"
                ],
                "summary": "Фильтры: добавление фильтра поиска в список текущего пользователя",
                "operationId": "addSearchFilterToMe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID фильтра поиска",
                        "name": "filterId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Фильтр добавлен в список пользователя"
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Невозможно добавить приватный фильтр, недостаточно прав",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет указанный фильтр поиска из списка доступных фильтров текущего пользователя",
                "tags": [
                    "Search Filters"
                ],
                "summary": "Фильтры: удаление фильтра поиска из списка текущего пользователя",
                "operationId": "deleteSearchFilterFromMe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID фильтра поиска",
                        "name": "filterId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Фильтр успешно удален из списка пользователя"
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Невозможно удалить собственный фильтр",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/users/me/notifications": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет пользователю получить список своих уведомлений с поддержкой пагинации.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Пользователи: Получение уведомлений",
                "operationId": "getMyNotificationList",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Количество записей на странице",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список уведомлений",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/notifications.NotificationResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет пользователю пометить определенные уведомления как прочитанные и возвращает количество непрочитанных уведомлений.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Пользователи: Пометить уведомления как прочитанные",
                "operationId": "updateToReadMyNotifications",
                "parameters": [
                    {
                        "description": "Список идентификаторов уведомлений для пометки как прочитанные",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.NotificationViewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Количество непрочитанных уведомлений",
                        "schema": {
                            "$ref": "#/definitions/aiplan.NotificationIdResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректные идентификаторы уведомлений",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет пользователю удалить все свои уведомления из базы данных.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Пользователи: Удаление всех уведомлений",
                "operationId": "deleteMyNotifications",
                "responses": {
                    "200": {
                        "description": "Уведомления успешно удалены"
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/users/me/onboard/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет статус онбординга текущего пользователя и сохраняет его данные",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи: онбординг пользователя",
                "operationId": "updateUserOnBoard",
                "parameters": [
                    {
                        "description": "Данные пользователя для онбординга",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленные данные пользователя",
                        "schema": {
                            "$ref": "#/definitions/dto.User"
                        }
                    },
                    "304": {
                        "description": "Данные уже обновлены"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "409": {
                        "description": "Конфликт имени пользователя",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/users/me/token/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает текущий токен авторизации пользователя, если он существует",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи (управление доступом): получение текущего токена авторизации пользователя",
                "operationId": "getMyAuthToken",
                "responses": {
                    "200": {
                        "description": "Текущий токен авторизации",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "204": {
                        "description": "Токен не установлен"
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/users/me/token/reset/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает новый токен авторизации для текущего пользователя и возвращает успешный ответ",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи (управление доступом): сброс токена авторизации пользователя",
                "operationId": "resetMyAuthToken",
                "responses": {
                    "201": {
                        "description": "Новый токен создан"
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/users/me/view-props/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет свойства представления текущего пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи: обновление пользовательских настроек представления",
                "operationId": "updateUserViewProps",
                "parameters": [
                    {
                        "description": "Свойства представления пользователя",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ViewProps"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Настройки успешно обновлены"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/users/me/workspaces/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список рабочих пространств, в которых состоит текущий пользователь, с возможностью поиска по имени.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство: получение рабочих пространств пользователя",
                "operationId": "getUserWorkspaceList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Поисковый запрос для фильтрации рабочих пространств по имени",
                        "name": "search_query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список рабочих пространств с количеством участников и проектов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.WorkspaceWithCount"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/users/user-favorite-workspaces/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список избранных рабочих пространств с информацией о владельце.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство (избранное): получение избранных пространств",
                "operationId": "getFavoriteWorkspaceList",
                "responses": {
                    "200": {
                        "description": "Список избранных рабочих пространств",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.WorkspaceFavorites"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении избранных рабочих пространств",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Добавляет рабочее пространство в избранное для текущего пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство (избранное): добавление пространства в избранное",
                "operationId": "addWorkspaceToFavorites",
                "parameters": [
                    {
                        "description": "ID рабочего пространства",
                        "name": "workspace",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/aiplan.requestAddFavorite"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "201": {
                        "description": "Созданное избранное рабочее пространство",
                        "schema": {
                            "$ref": "#/definitions/dto.WorkspaceFavorites"
                        }
                    },
                    "400": {
                        "description": "Ошибка в запросе",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Рабочее пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "409": {
                        "description": "Рабочее пространство уже в избранном",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/users/user-favorite-workspaces/{workspaceID}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет рабочее пространство из избранного для текущего пользователя по его ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство (избранное): удаление пространства из избранного",
                "operationId": "removeWorkspaceFromFavorites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID рабочего пространства",
                        "name": "workspaceID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Ошибка в запросе",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Рабочее пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/users/{userId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает информацию о пользователе по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи: получение пользователя по ID",
                "operationId": "getUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о пользователе",
                        "schema": {
                            "$ref": "#/definitions/dto.UserLight"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/users/{userId}/activities/table/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает таблицу активностей пользователя за указанный период.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи: получение таблицы активностей указанного пользователя",
                "operationId": "getUserActivitiesTable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Начальная дата периода в формате YYYY-MM-DD",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Конечная дата периода в формате YYYY-MM-DD",
                        "name": "to",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Таблица активностей пользователя",
                        "schema": {
                            "$ref": "#/definitions/types.ActivityTable"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима аутентификация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает новое рабочее пространство с заданными параметрами.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство: создание нового пространства",
                "operationId": "createWorkspace",
                "parameters": [
                    {
                        "description": "Информация о новом рабочем пространстве",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.CreateWorkspaceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданное рабочее пространство",
                        "schema": {
                            "$ref": "#/definitions/dto.Workspace"
                        }
                    },
                    "400": {
                        "description": "Ошибка: неверные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "409": {
                        "description": "Ошибка: конфликт с существующим рабочим пространством",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает информацию о рабочем пространстве по его ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство: получение информации о рабочем пространстве",
                "operationId": "getWorkspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о рабочем пространстве",
                        "schema": {
                            "$ref": "#/definitions/dto.Workspace"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: рабочее пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет указанное рабочее пространство. Доступно только для суперпользователей и владельца рабочего пространства.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство: удаление пространства",
                "operationId": "deleteWorkspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Рабочее пространство успешно удалено"
                    },
                    "403": {
                        "description": "Ошибка: недостаточно прав для удаления рабочего пространства",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: рабочее пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет информацию о рабочем пространстве",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство: обновление данных рабочего пространства",
                "operationId": "updateWorkspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Объект рабочего пространства с обновленными данными",
                        "name": "workspace",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dto.Workspace"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о обновленном рабочем пространстве",
                        "schema": {
                            "$ref": "#/definitions/dto.Workspace"
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: рабочее пространство или администратор не найдены",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/activities": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список активностей рабочего пространства с поддержкой пагинации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство: получение активностей рабочего пространства",
                "operationId": "getWorkspaceActivityList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "\"\"",
                        "description": "День выборки активностей",
                        "name": "day",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": -1,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Количество результатов на странице",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список активностей рабочего пространства",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.EntityActivityFull"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Рабочее пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/doc/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список коневых документов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "doc: получение всех корневых документов",
                "operationId": "getRootDocList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "информация о документах",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.DocLight"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: рабочее пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "добавление корневого документа",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "doc: добавление корневого документа",
                "operationId": "createRootDoc",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "{\"title\": \"title text\", \"content\": \"\u003cp\u003eHTML-контент\u003c/p\u003e\", \"reader_role\": 5, \"editor_role\":10, \"seq_id\": 0, \"draft\": false}",
                        "description": "документ в формате JSON",
                        "name": "doc",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Вложения для документа",
                        "name": "files",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "документ",
                        "schema": {
                            "$ref": "#/definitions/dto.Doc"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: рабочее пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "413": {
                        "description": "Большой объем файла",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/doc/{docId}/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "получение документа",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "doc: получение документа",
                "operationId": "getDoc",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id документа",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "документ",
                        "schema": {
                            "$ref": "#/definitions/dto.Doc"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "добавление документа",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "doc: добавление документа",
                "operationId": "createDoc",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id документа",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "{\"title\": \"title text\", \"content\": \"\u003cp\u003eHTML-контент\u003c/p\u003e\", \"reader_role\": 5, \"editor_role\":10, \"seq_id\": 0, \"draft\": false}",
                        "description": "документ в формате JSON",
                        "name": "doc",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Вложения для документа",
                        "name": "files",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "документ",
                        "schema": {
                            "$ref": "#/definitions/dto.Doc"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "413": {
                        "description": "Большой объем файла",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "удаление документа",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "doc: удаление документа",
                "operationId": "deleteDoc",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id документа",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "документ удален"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "изменение документа",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "doc: изменение документа",
                "operationId": "updateDoc",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id документа",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "{\"title\": \"title text\", \"content\": \"\u003cp\u003eHTML-контент\u003c/p\u003e\", \"reader_role\": 5, \"editor_role\":10, \"seq_id\": 0, \"draft\": false}",
                        "description": "документ в формате JSON",
                        "name": "doc",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Вложения для документа",
                        "name": "files",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "документ",
                        "schema": {
                            "$ref": "#/definitions/dto.Doc"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/doc/{docId}/activities/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает активность по документу",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "Doc: получение активности по документу",
                "operationId": "getDocActivityList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id документа",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Лимит записей",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список активностей с пагинацией",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.EntityActivityFull"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/doc/{docId}/child/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает все дочерние документы",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "doc: получение все дочерние документы",
                "operationId": "getChildDocList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id документа",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "информация о документах",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.DocLight"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/doc/{docId}/comments/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "комментарии документа",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "doc: комментарии документа",
                "operationId": "getDocCommentList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id документа",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Лимит записей",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "комментарии",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.DocComment"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "создание комментария",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "doc: создание комментария",
                "operationId": "createDocComment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id документа",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "{\"comment_html\": \"\u003cp\u003eHTML-контент\u003c/p\u003e\", \"reply_to_comment_id\": null}",
                        "description": "комментарий в формате JSON",
                        "name": "comment",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Вложения для документа",
                        "name": "files",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "комментарий",
                        "schema": {
                            "$ref": "#/definitions/dto.DocComment"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "413": {
                        "description": "Большой объем файла",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/doc/{docId}/comments/{commentId}/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Получает данные комментария",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "doc: получение комментария",
                "operationId": "getDocComment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id документа",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID комментария",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Комментарий",
                        "schema": {
                            "$ref": "#/definitions/dto.DocComment"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "удаление комментария",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "doc: удаление комментария",
                "operationId": "deleteDocComment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id документа",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id комментария",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "комментарий удален"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "обновление комментария",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "doc: обновление комментария",
                "operationId": "updateDocComment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id документа",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id комментария",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "{\"comment_html\": \"\u003cp\u003eHTML-контент\u003c/p\u003e\", \"reply_to_comment_id\": null}",
                        "description": "комментарий в формате JSON",
                        "name": "comment",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Вложения для документа",
                        "name": "files",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "комментарий",
                        "schema": {
                            "$ref": "#/definitions/dto.DocComment"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "413": {
                        "description": "Большой объем файла",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/doc/{docId}/comments/{commentId}/reactions/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "добавление реакции",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "doc: добавление реакции",
                "operationId": "addDocCommentReaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id документа",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id комментария",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Реакция (пример: 👍, 👎, ❤️)",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.ReactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "реакция добавлена ранее",
                        "schema": {
                            "$ref": "#/definitions/dto.CommentReaction"
                        }
                    },
                    "201": {
                        "description": "реакция добавлена",
                        "schema": {
                            "$ref": "#/definitions/dto.CommentReaction"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/doc/{docId}/comments/{commentId}/reactions/{reaction}/": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "удаление реакции",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "doc: удаление реакции",
                "operationId": "removeDocCommentReaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id документа",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id комментария",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "реакция",
                        "name": "reaction",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "удален"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/doc/{docId}/doc-attachments/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех вложений, прикрепленных к документу",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "Doc (вложения): получение вложений документа",
                "operationId": "getDocAttachmentList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id документа",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список вложений",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Attachment"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Загружает новое вложение и прикрепляет его к документу",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "Doc (вложения): загрузка вложения в документ",
                "operationId": "createDocAttachments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id документа",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Файл для загрузки",
                        "name": "asset",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданное вложение",
                        "schema": {
                            "$ref": "#/definitions/dto.Attachment"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/doc/{docId}/doc-attachments/{attachmentId}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет указанное вложение, прикрепленное к документу",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "Doc (вложения): удаление вложения из документа",
                "operationId": "deleteDocAttachment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id документа",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID вложения",
                        "name": "attachmentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Вложение успешно удалено"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/doc/{docId}/history/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает истории изменений  по документу",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "Doc: получение истории изменений по документу",
                "operationId": "getDocHistoryList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id документа",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Лимит записей",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список с пагинацией",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.HistoryBodyLight"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/doc/{docId}/history/{versionId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает старую версию по документу",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "Doc: получение старой версии по документу",
                "operationId": "getDocHistory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id документа",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id версии",
                        "name": "versionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "версия по id и текущая",
                        "schema": {
                            "$ref": "#/definitions/dto.HistoryBody"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Откатывает старую версию документа",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "Doc: Откат старой версии документа",
                "operationId": "updateDocFromHistory",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id документа",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id версии",
                        "name": "versionId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "успешно"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/doc/{docId}/move/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "перенос документа",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "doc: перенос документа",
                "operationId": "moveDoc",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id документа",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "документ перемещен"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/forms/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список форм для указанного рабочего пространства.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forms"
                ],
                "summary": "формы: список по пространству",
                "operationId": "getFormList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список форм",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.FormLight"
                            }
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Рабочее пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает новую форму в рабочем пространстве.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forms"
                ],
                "summary": "формы: создать форму",
                "operationId": "createForm",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные формы",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.reqForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданная форма",
                        "schema": {
                            "$ref": "#/definitions/dto.Form"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации данных формы",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Недостаточно прав для создания формы",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/forms/{formSlug}/": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет форму в рабочем пространстве.",
                "tags": [
                    "Forms"
                ],
                "summary": "формы: удалить форму",
                "operationId": "deleteForm",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Slug формы",
                        "name": "formSlug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Форма успешно удалена"
                    },
                    "403": {
                        "description": "Недостаточно прав для удаления формы",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Форма не найдена",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет данные формы.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forms"
                ],
                "summary": "формы: обновить форму",
                "operationId": "updateForm",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Slug формы",
                        "name": "formSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Новые данные формы",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.reqForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленная форма",
                        "schema": {
                            "$ref": "#/definitions/dto.Form"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации данных",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Недостаточно прав для обновления формы",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Форма не найдена",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/forms/{formSlug}/answers/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех ответов на указанную форму.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forms"
                ],
                "summary": "ответы: Получить ответы",
                "operationId": "getAnswers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Slug формы",
                        "name": "formSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Количество результатов на странице",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список ответов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/dao.PaginationResponse"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "result": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/definitions/dto.FormAnswer"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Форма не найдена",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/forms/{formSlug}/answers/{answerSeq}/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает информацию о конкретном ответе по ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forms"
                ],
                "summary": "ответы: Получить ответ",
                "operationId": "getAnswer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Slug формы",
                        "name": "formSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Порядковый номер ответа",
                        "name": "answerSeq",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация об ответе",
                        "schema": {
                            "$ref": "#/definitions/dto.FormAnswer"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ответ не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/integrations/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "получение интеграций",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство (интеграции): получение интеграций",
                "operationId": "getIntegrationList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "интеграции",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/integrations.Integration"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка в запросе",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: рабочее пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/integrations/add/{name}/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "добавление интеграции в пространство",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство (интеграции): добавление интеграции",
                "operationId": "addIntegrationToWorkspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "имя интеграции",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ok"
                    },
                    "400": {
                        "description": "Ошибка в запросе",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: рабочее пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/integrations/{name}/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "удаление интеграции из пространства",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство (интеграции): удаление интеграции",
                "operationId": "deleteIntegrationFromWorkspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "имя интеграции",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "400": {
                        "description": "Ошибка в запросе",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: рабочее пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/invite": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Приглашает новых пользователей или существующих в системе в указанное рабочее пространство, Приглашённые получают роль, определённую отправителем.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство: приглашение новых участников пространства",
                "operationId": "addToWorkspace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Список email и ролей для приглашения пользователей в рабочее пространство",
                        "name": "invite",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.requestMembersInvite"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Сообщение об успешной отправке приглашений",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации данных запроса, например, некорректный email",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: рабочее пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "409": {
                        "description": "Ошибка: пользователь уже является участником рабочего пространства",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/issues/migrate": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Мигрирует задачу из одного проекта в другой с опциональной поддержкой связанных задач и удаления исходной задачи",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи (миграции): миграция задачи рабочего пространства",
                "operationId": "migrateIssues",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID целевого проекта",
                        "name": "target_project",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID исходной задачи",
                        "name": "src_issue",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Мигрировать связанные задачи",
                        "name": "linked_issues",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Удалить исходную задачу после миграции",
                        "name": "delete_src",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Создать не достающие label, state",
                        "name": "create_entities",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID созданной задачи",
                        "schema": {
                            "$ref": "#/definitions/aiplan.NewIssueID"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса или данные",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/issues/migrate/byLabel": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Мигрирует все задачи с определенной меткой из одного проекта в другой с опциональной поддержкой связанных задач и удаления исходных задач",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи (миграции): миграция задач по метке рабочего пространства",
                "operationId": "migrateIssuesByLabel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID целевого проекта",
                        "name": "target_project",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID исходной метки",
                        "name": "src_label",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Мигрировать связанные задачи",
                        "name": "linked_issues",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Удалить исходные задачи после миграции",
                        "name": "delete_src",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Создать не достающие label, state",
                        "name": "create_entities",
                        "in": "query"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Задачи успешно мигрированы"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса или данные",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Целевой проект или исходная метка не найдены",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/jitsi-token": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Генерирует и возвращает JWT-токен для доступа пользователя в комнату Jitsi, соответствующую рабочему пространству.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство: получение токена для Jitsi-комнаты рабочего пространства",
                "operationId": "getWorkspaceJitsiToken",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT-токен для комнаты Jitsi",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: рабочее пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/logo": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Загружает новый логотип для указанного рабочего пространства и обновляет запись в базе данных.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство (логотип): обновление пространства",
                "operationId": "updateWorkspaceLogo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Файл логотипа",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленное рабочее пространство",
                        "schema": {
                            "$ref": "#/definitions/dto.Workspace"
                        }
                    },
                    "400": {
                        "description": "Ошибка: неверный формат файла",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: недостаточно прав для обновления логотипа",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: рабочее пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет логотип указанного рабочего пространства и обновляет запись в базе данных.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство (логотип): удаление логотипа пространства",
                "operationId": "deleteWorkspaceLogo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленное рабочее пространство",
                        "schema": {
                            "$ref": "#/definitions/dto.Workspace"
                        }
                    },
                    "403": {
                        "description": "Ошибка: недостаточно прав для удаления логотипа",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: рабочее пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/members": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список участников указанного рабочего пространства. Включает поиск по email или имени.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство (участники): получение списка участников пространства",
                "operationId": "getWorkspaceMemberList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": -1,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Ограничение количества записей на странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"\"",
                        "description": "Поисковый запрос для фильтрации участников по email или имени",
                        "name": "search_query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"last_name\"",
                        "description": "Поле для сортировки: 'last_name' (по умолчанию), 'email', 'role'",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": true,
                        "description": "Направление сортировки: true - по убыванию, false - по возрастанию",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список участников с учетом пагинации",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.WorkspaceMemberLight"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации данных запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: рабочее пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/members/activities/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "активность участников пространства",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство: активность участников",
                "operationId": "getWorkspaceMembersActivityList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Начальная дата периода в формате YYYY-MM-DD",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Конечная дата периода в формате YYYY-MM-DD",
                        "name": "to",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "таблица активностей",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/types.ActivityTable"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные данные запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/members/message/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет отправить сообщение всем участникам рабочего пространства или выбранным участникам. Поддерживается отправка отложенных сообщений.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство: Отправка сообщений участникам",
                "operationId": "createMessageForWorkspaceMember",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Информация о сообщении",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.requestMessage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Сообщения успешно отправлены"
                    },
                    "400": {
                        "description": "Некорректные данные запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/members/{memberId}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет указанного участника из рабочего пространства",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство (участники): удаление участника пространства",
                "operationId": "deleteWorkspaceMember",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID участника для удаления",
                        "name": "memberId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Участник успешно удален из рабочего пространства"
                    },
                    "400": {
                        "description": "Ошибка: недопустимое действие или запрос",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: участник или рабочее пространство не найдены",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "409": {
                        "description": "Ошибка: невозможно удалить участника с более высокой ролью",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Изменяет роль участника в рабочем пространстве. Администраторы могут назначать и изменять роли участников.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство (участники): обновление роли участника пространства",
                "operationId": "updateWorkspaceMember",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID участника для обновления роли",
                        "name": "memberId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Новая роль участника",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.requestRoleMember"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Роль участника успешно обновлена",
                        "schema": {
                            "$ref": "#/definitions/dto.WorkspaceMemberLight"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации данных запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: недостаточно прав для обновления роли",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: участник или рабочее пространство не найдены",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "409": {
                        "description": "Ошибка: запрещено обновлять роль владельца рабочего пространства",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/members/{memberId}/set-email/": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Устанавливает email для участника рабочего пространства. Операция доступна только администраторам рабочего пространства.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство (участники): назначение email для участника пространства",
                "operationId": "updateUserEmail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID участника для установки email",
                        "name": "memberId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Новый email участника",
                        "name": "email",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/aiplan.requestEmailMember"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email успешно установлен"
                    },
                    "400": {
                        "description": "Ошибка валидации данных запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: недостаточно прав для установки email",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: участник или рабочее пространство не найдены",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "409": {
                        "description": "Ошибка: email уже назначен данному участнику",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/project-identifiers": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает информацию о том, существует ли идентификатор проекта в указанном рабочем пространстве.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты: проверка идентификатора проекта на уникальность",
                "operationId": "checkProjectIdentifierAvailability",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор проекта",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Статус доступности идентификатора",
                        "schema": {
                            "$ref": "#/definitions/aiplan.CheckProjectIdentifierAvailabilityResponse"
                        }
                    },
                    "400": {
                        "description": "Идентификатор проекта обязателен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех проектов в рабочем пространстве, к которым у пользователя есть доступ.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты: получение списка проектов",
                "operationId": "getProjectList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Поисковый запрос для фильтрации проектов по названию",
                        "name": "search_query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список проектов с информацией о количестве участников и статусе избранного",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ProjectLight"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает новый проект в рабочем пространстве. Необходимы права на создание проектов.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты: создание проекта",
                "operationId": "createProject",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Информация о проекте",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.CreateProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Созданный проект",
                        "schema": {
                            "$ref": "#/definitions/dto.Project"
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "409": {
                        "description": "Конфликт идентификатора проекта",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/join/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет пользователю присоединиться к нескольким проектам в рабочем пространстве.",
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты: подключение пользователя к списку проектов",
                "operationId": "joinProjects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ID проектов для подключения",
                        "name": "projects",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.JoinProjectsRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Сообщение об успешном подключении к проектам",
                        "schema": {
                            "$ref": "#/definitions/aiplan.JoinProjectsSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка при подключении к проектам",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Попытка подключиться к закрытому проекту",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает информацию о проекте по его идентификатору.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты: получение проекта",
                "operationId": "getProject",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о проекте",
                        "schema": {
                            "$ref": "#/definitions/dto.Project"
                        }
                    },
                    "404": {
                        "description": "Проект не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет проект, если у пользователя есть соответствующие права.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты: удаление проекта",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Проект успешно удален"
                    },
                    "403": {
                        "description": "Нет прав на удаление проекта",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Проект не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет информацию о проекте, включая название, ответственного и списки наблюдателей и исполнителей.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты: изменение проекта",
                "operationId": "updateProject",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные проекта для обновления",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Project"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о проекте после обновления",
                        "schema": {
                            "$ref": "#/definitions/dto.Project"
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса или валидации данных",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Недостаточно прав для выполнения операции",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Администратор проекта не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/activities": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список активностей для указанного проекта с возможностью пагинации.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты: получение активностей рабочего проекта",
                "operationId": "getProjectActivityList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Количество записей на странице",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список активностей проекта",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.EntityActivityFull"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Проект не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/bulk-delete-issues": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет несколько задач в проекте по их ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: массовое удаление задач",
                "operationId": "deleteIssuesBulk",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Список ID задач для удаления",
                        "name": "issuesIds",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Сообщение о количестве удаленных задач",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка: ID задач не указаны",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issue-labels": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех тегов, связанных с проектом, с возможностью фильтрации по названию",
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (теги): получение списка тегов",
                "operationId": "getIssueLabelList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Поисковый запрос для фильтрации тегов по названию",
                        "name": "search_query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список тегов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.LabelLight"
                            }
                        }
                    },
                    "404": {
                        "description": "Проект не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает новый тег для проекта",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (теги): создание тега",
                "operationId": "createIssueLabel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные тега",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LabelLight"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданный тег",
                        "schema": {
                            "$ref": "#/definitions/dto.LabelLight"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные тега",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "409": {
                        "description": "Тег с таким именем уже существует",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issue-labels/{labelId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает данные тега по его ID",
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (теги): получение информации о теге",
                "operationId": "getIssueLabel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID тега",
                        "name": "labelId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о теге",
                        "schema": {
                            "$ref": "#/definitions/dto.LabelLight"
                        }
                    },
                    "404": {
                        "description": "Тег не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет тег по его ID из проекта",
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (теги): удаление тега",
                "operationId": "deleteIssueLabel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID тега",
                        "name": "labelId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Тег успешно удален"
                    },
                    "404": {
                        "description": "Тег не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет выбранные данные тега по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (теги): обновление тега",
                "operationId": "updateIssueLabel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID тега",
                        "name": "labelId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления тега",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LabelLight"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленный тег",
                        "schema": {
                            "$ref": "#/definitions/dto.LabelLight"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные тега",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Тег не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "409": {
                        "description": "Тег с таким именем уже существует",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает новую задачу в проекте с указанными параметрами и настройками",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: создание новой задачи",
                "operationId": "createIssue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные задачи",
                        "name": "issue",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.IssueCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID созданной задачи",
                        "schema": {
                            "$ref": "#/definitions/aiplan.NewIssueID"
                        }
                    },
                    "400": {
                        "description": "Неверные данные задачи",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает информацию о задаче в проекте по её идентификатору или номеру последовательности",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: получение задачи",
                "operationId": "getIssue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или номеру последовательности задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Детали задачи",
                        "schema": {
                            "$ref": "#/definitions/dto.Issue"
                        }
                    },
                    "204": {
                        "description": "Нет контента (пользователь не имеет доступа)"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет задачу из проекта. Только автор задачи или администратор могут выполнить удаление.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: удаление задачи",
                "operationId": "deleteIssue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Задача успешно удалена"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет указанные поля задачи, такие как состояние, исполнители, наблюдатели, метки и вложения.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: частичное обновление задачи",
                "operationId": "updateIssue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "задача в формате JSON",
                        "name": "issue",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Файлы для добавления в задачу",
                        "name": "files",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленные данные задачи",
                        "schema": {
                            "$ref": "#/definitions/dto.Issue"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/activities": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает активность по задаче без учета комментариев, с возможностью фильтрации по полю",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: получение активности по задаче",
                "operationId": "getIssueActivityList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Лимит записей",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поле активности для фильтрации (например: state)",
                        "name": "field",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список активностей с пагинацией",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.EntityActivityFull"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/blockers-issues/available": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Поиск задач, которые могут быть добавлены в качестве блокирующих для текущей задачи",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: поиск доступных блокирующих задач",
                "operationId": "getAvailableBlockersIssueList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Лимит записей",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поле для сортировки",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Сортировка по убыванию",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поисковый запрос",
                        "name": "search_query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список доступных блокирующих задач",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.Issue"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/blocks-issues/available": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Поиск задач, которые могут быть добавлены в качестве блокируемых текущей задачей",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: поиск доступных блокируемых задач",
                "operationId": "getAvailableBlocksIssueList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Лимит записей",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поле для сортировки",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Сортировка по убыванию",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поисковый запрос",
                        "name": "search_query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список доступных блокируемых задач",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.Issue"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/comments": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список комментариев к задаче с возможностью пагинации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи (комментарии): получение списка комментариев к задаче",
                "operationId": "getIssueCommentList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Лимит записей",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список комментариев с пагинацией и количеством реакций",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.IssueComment"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Добавляет новый комментарий к задаче с возможностью добавления вложений",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи (комментарии): добавление комментария к задаче",
                "operationId": "createIssueComment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Текст комментария в формате JSON",
                        "name": "comment",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Вложения для комментария",
                        "name": "files",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданный комментарий",
                        "schema": {
                            "$ref": "#/definitions/dto.IssueComment"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "429": {
                        "description": "Слишком часто создаются комментарии",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/comments/{commentId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Получает данные комментария к задаче",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи (комментарии): получение комментария к задаче",
                "operationId": "getIssueComment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID комментария",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Комментарий",
                        "schema": {
                            "$ref": "#/definitions/dto.IssueComment"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет указанный комментарий из задачи",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи(комментарии): удаление комментария к задаче",
                "operationId": "deleteIssueComment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID комментария",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Комментарий успешно удален"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Изменяет текст и вложения для указанного комментария задачи",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи (комментарии): изменение комментария к задаче",
                "operationId": "updateIssueComment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID комментария",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Обновленный текст комментария в формате JSON",
                        "name": "comment",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Новые вложения для комментария",
                        "name": "files",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленный комментарий",
                        "schema": {
                            "$ref": "#/definitions/dto.IssueComment"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/comments/{commentId}/reactions": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Добавляет реакцию пользователя к комментарию задачи",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи (комментарии): добавление реакции к комментарию",
                "operationId": "addCommentReaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID комментария",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Реакция (пример: 👍, 👎, ❤️)",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданная реакция",
                        "schema": {
                            "$ref": "#/definitions/dto.CommentReaction"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса или реакция",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/comments/{commentId}/reactions/{reaction}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет указанную реакцию пользователя с комментария задачи",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи (комментарии): удаление реакции с комментария",
                "operationId": "removeCommentReaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID комментария",
                        "name": "commentId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Реакция для удаления (пример: 👍, 👎, ❤️)",
                        "name": "reaction",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Реакция успешно удалена"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/description-lock": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Блокирует описание задачи за вызвавшим пользователем, так что только он сможет сохранять описание",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: Блокировка описания задачи за пользователем",
                "operationId": "issueDescriptionLock",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Описание успешно заблокировано",
                        "schema": {
                            "$ref": "#/definitions/aiplan.IssueLockResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "409": {
                        "description": "Описание заблокировано другим пользователем",
                        "schema": {
                            "$ref": "#/definitions/aiplan.IssueLockResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/description-unlock": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Разблокирует описание задачи",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: Разблокировка описания задачи",
                "operationId": "issueDescriptionUnlock",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Описание успешно разблокировано"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/history": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает историю изменений и комментариев для задачи, отсортированных по времени создания",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: получение истории задачи",
                "operationId": "getIssueHistoryList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "История изменений и комментариев задачи",
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/issue-attachments": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех вложений, прикрепленных к задаче",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи (вложения): получение вложений задачи",
                "operationId": "getIssueAttachmentList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список вложений",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/dao.PaginationResponse"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "result": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/definitions/dto.Attachment"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Загружает новое вложение и прикрепляет его к задаче",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи (вложения): загрузка вложения в задачу",
                "operationId": "createIssueAttachments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Файл для загрузки",
                        "name": "asset",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданное вложение",
                        "schema": {
                            "$ref": "#/definitions/dto.Attachment"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/issue-attachments/all/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Скачивает все вложения задачи в виде ZIP-архива",
                "produces": [
                    "application/zip"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи (вложения): скачать все вложения в ZIP",
                "operationId": "downloadIssueAttachments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Файл для загрузки",
                        "name": "asset",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ZIP-файл со всеми вложениями",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/issue-attachments/{attachmentId}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет указанное вложение, прикрепленное к задаче",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи (вложения): удаление вложения из задачи",
                "operationId": "deleteIssueAttachment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID вложения",
                        "name": "attachmentId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Вложение успешно удалено"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/issue-links": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех ссылок, прикрепленных к задаче",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи (ссылки): получение списка ссылок в задаче",
                "operationId": "getIssueLinkList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список ссылок",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.IssueLinkLight"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает новую ссылку, прикрепленную к задаче",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи (ссылки): создание ссылки в задаче",
                "operationId": "createIssueLink",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные новой ссылки",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.IssueLinkRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Созданная ссылка",
                        "schema": {
                            "$ref": "#/definitions/dto.IssueLinkLight"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/issue-links/{linkId}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет указанную ссылку, прикрепленную к задаче",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи (ссылки): удаление ссылки в задаче",
                "operationId": "deleteIssueLink",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID ссылки",
                        "name": "linkId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ссылка успешно удалена"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет существующую ссылку в задаче",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи (ссылки): обновление ссылки в задаче",
                "operationId": "updateIssueLink",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID ссылки",
                        "name": "linkId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления ссылки",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.IssueLinkRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленная ссылка",
                        "schema": {
                            "$ref": "#/definitions/dto.IssueLinkLight"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/linked-issues": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список задач, связанных с указанной задачей",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: получение связанных задач",
                "operationId": "getIssueLinkedIssueList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список связанных задач",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Issue"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Устанавливает список связанных задач для указанной задачи",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: установка связанных задач",
                "operationId": "addIssueLinkedIssueList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Идентификаторы связанных задач",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.LinkedIssuesIds"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленный список связанных задач",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.IssueLight"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/linked-issues/available/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Поиск задач, которые могут быть связаны с текущей задачи",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: поиск доступных для связывания задач",
                "operationId": "getAvailableLinkedIssueList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Лимит записей",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поле для сортировки",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Сортировка по убыванию",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поисковый запрос",
                        "name": "search_query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список доступных блокирующих задач",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.Issue"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/parent-issues/available": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Поиск задач, доступных для назначения в качестве родительских для текущей задачи",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: поиск доступных родительских задач",
                "operationId": "getAvailableParentIssueList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Лимит записей",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поле для сортировки",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Сортировка по убыванию",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поисковый запрос",
                        "name": "search_query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список доступных родительских задач",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.Issue"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/pdf": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает PDF-файл в соответствии с заданными параметрами",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/pdf"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: Получение PDF-файла задачи",
                "operationId": "getIssuePdf",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PDF-файл задачи",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/sub-issues": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список подзадач для указанной задачи с распределением по состояниям",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: получение списка подзадач",
                "operationId": "getSubIssueList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список подзадач и распределение состояний",
                        "schema": {
                            "$ref": "#/definitions/aiplan.ResponseSubIssueList"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Добавляет указанные задачи как подзадачи для текущей задачи",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: добавление подзадач",
                "operationId": "addSubIssueList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Идентификаторы подзадач для добавления",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.SubIssuesIds"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список добавленных подзадач",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.IssueLight"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/sub-issues/available": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Поиск задач, доступных для добавления в качестве подзадач",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: поиск доступных подзадач",
                "operationId": "getAvailableSubIssueList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Лимит записей",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поле для сортировки",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Сортировка по убыванию",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поисковый запрос",
                        "name": "search_query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список доступных задач для добавления",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.Issue"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/sub-issues/{subIssueId}/down": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Перемещает подзадачу выше по списку при ручной сортировке детей",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: перемещение подзадачи вверх в списке",
                "operationId": "moveSubIssueDown",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор подзадачи",
                        "name": "subIssueId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Подзадача успешно перемещена"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/issues/{issueIdOrSeq}/sub-issues/{subIssueId}/up": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Перемещает подзадачу выше по списку при ручной сортировке детей",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Issues"
                ],
                "summary": "Задачи: перемещение подзадачи вверх в списке",
                "operationId": "moveSubIssueUp",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор или последовательный номер задачи",
                        "name": "issueIdOrSeq",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Идентификатор подзадачи",
                        "name": "subIssueId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Подзадача успешно перемещена"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/logo/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Загружает новый логотип для указанного проекта и обновляет запись в базе данных.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (логотип): обновление логотипа",
                "operationId": "updateProjectLogo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Файл логотипа",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленный проект",
                        "schema": {
                            "$ref": "#/definitions/dto.Project"
                        }
                    },
                    "400": {
                        "description": "Ошибка: неверный формат файла",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Ошибка: недостаточно прав для обновления логотипа",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет логотип указанного проекта и обновляет запись в базе данных.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (логотип): удаление логотипа проекта",
                "operationId": "deleteProjectLogo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленное рабочее пространство",
                        "schema": {
                            "$ref": "#/definitions/dto.Project"
                        }
                    },
                    "403": {
                        "description": "Ошибка: недостаточно прав для удаления логотипа",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/me/notifications/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет настройки уведомлений для текущего участника проекта.",
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (участники): обновление настроек уведомлений текущего участника проекта",
                "operationId": "updateMyNotifications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Настройки уведомлений",
                        "name": "notificationSettings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.projectNotificationRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Настройки успешно обновлены"
                    },
                    "400": {
                        "description": "Ошибка при обновлении настроек уведомлений",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/members": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список участников проекта с возможностью фильтрации по имени или электронной почте.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (участники): получение списка участников проекта",
                "operationId": "getProjectMemberList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": -1,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Количество участников на странице",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"\"",
                        "description": "Поисковый запрос для фильтрации участников по имени или электронной почте",
                        "name": "search_query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "\"last_name\"",
                        "description": "Поле для сортировки",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": true,
                        "description": "Направление сортировки: true - по убыванию, false - по возрастанию ",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "default": "[\"username\", \"email\", \"last_name\", \"first_name\"]",
                        "description": "Список полей для поиска",
                        "name": "find_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список пользователей проекта",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "my_entity": {
                                            "$ref": "#/definitions/dto.ProjectMemberLight"
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.ProjectMemberLight"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/members/add": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Добавляет нового участника в проект. Проверяет наличие пользователя в рабочем пространстве и уникальность его участия в проекте.",
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (участники): добавление участника в проект",
                "operationId": "addMemberToProject",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные участника проекта",
                        "name": "memberId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectMember"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Успешное добавление участника",
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectMemberLight"
                        }
                    },
                    "400": {
                        "description": "Роль и ID участника обязательны",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден или не является участником рабочего пространства",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "409": {
                        "description": "Пользователь уже является участником проекта",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/members/{memberId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает информацию о конкретном участнике проекта по его идентификатору.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (участники): получение информации об участнике проекта",
                "operationId": "getProjectMember",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID участника проекта",
                        "name": "memberId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о члене проекта",
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectMemberLight"
                        }
                    },
                    "404": {
                        "description": "Участник проекта не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет участника проекта по его идентификатору. Проверяет права пользователя и ограничения на удаление.",
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (участники): удаление участника из проекта",
                "operationId": "deleteProjectMember",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID участника проекта",
                        "name": "memberId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Успешное удаление участника проекта"
                    },
                    "403": {
                        "description": "Нет прав на удаление участника",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Участник проекта не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет роль участника проекта по его идентификатору. Проверяет, что обновление не нарушает ограничения по ролям и статусу участника.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (участники): обновление роли участника проекта",
                "operationId": "updateProjectMember",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID участника проекта",
                        "name": "memberId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Обновленная роль участника проекта",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о обновленном участнике проекта",
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectMemberLight"
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Нет прав на изменение роли",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Участник проекта не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/project-members/me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает информацию о текущем пользователе как члене проекта.",
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты: получение информации о членстве текущего пользователя в проекте",
                "operationId": "getProjectMemberMe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о членстве пользователя в проекте",
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectMember"
                        }
                    },
                    "404": {
                        "description": "Членство в проекте не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/project-views/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Позволяет пользователю установить настройки просмотра для конкретного проекта.",
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты: установка фильтров для просмотра проектов",
                "operationId": "updateProjectView",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Настройки просмотра проекта",
                        "name": "view_props",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ViewProps"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Настройки просмотра успешно обновлены",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Ошибка при установке настроек просмотра",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Проект не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/rules-log": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Получает логи правил проекта с возможностью фильтрации по типу и пагинации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (логи): получение логов правил",
                "operationId": "getRulesLog",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": -1,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 30,
                        "description": "Лимит записей",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Фильтр запроса",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.GetRulesLogfilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список логов правил с пагинацией",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.RulesLog"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "204": {
                        "description": "Нет контента (пользователь не имеет доступа)"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/states": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех статусов проекта с возможностью фильтрации по названию",
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (статусы): получение статусов проекта",
                "operationId": "getStateList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Поисковый запрос для фильтрации статусов по названию",
                        "name": "search_query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Группированный список статусов",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/dto.StateLight"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Проект не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает новый статус для проекта",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (статусы): создание статуса",
                "operationId": "createState",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные статуса",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StateLight"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданный статус",
                        "schema": {
                            "$ref": "#/definitions/dto.StateLight"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные для статуса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "409": {
                        "description": "Статус с таким именем уже существует",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/states/{stateId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает данные статуса по его ID",
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (статусы): получение информации о статусе",
                "operationId": "getState",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID статуса",
                        "name": "stateId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о статусе",
                        "schema": {
                            "$ref": "#/definitions/dto.StateLight"
                        }
                    },
                    "404": {
                        "description": "Статус не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет статус по его ID, если он не является статусом по умолчанию и не используется задачами",
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (статусы): удаление статуса",
                "operationId": "deleteState",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID статуса",
                        "name": "stateId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Статус успешно удален"
                    },
                    "400": {
                        "description": "Статус не может быть удален",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Статус не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет данные существующего статуса по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (статусы): обновление статуса",
                "operationId": "updateState",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID статуса",
                        "name": "stateId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления статуса",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.UpdateStateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленный статус",
                        "schema": {
                            "$ref": "#/definitions/dto.StateLight"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные для статуса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Статус не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/templates": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список шаблонов задач с пагинацией.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (шаблоны задач): получение списка шаблонов задач",
                "operationId": "getProjectIssueTemplates",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": -1,
                        "description": "Смещение для пагинации",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Количество участников на странице",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список шаблонов задач",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dao.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.IssueTemplate"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает новый шаблон задач для проекта",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (шаблоны задач): создание шаблона",
                "operationId": "createIssueTemplate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные шаблона",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.IssueTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Шаблон создан"
                    },
                    "400": {
                        "description": "Некорректные данные шаблона",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/projects/{projectId}/templates/{templateId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает данные шаблона задач по его ID",
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (шаблоны задач): получение информации о шаблоне",
                "operationId": "getIssueTemplate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID шаблона",
                        "name": "templateId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о шаблоне",
                        "schema": {
                            "$ref": "#/definitions/dto.IssueTemplate"
                        }
                    },
                    "404": {
                        "description": "Шаблон не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет шаблон задач для проекта",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (шаблоны задач): удаление шаблона",
                "operationId": "deleteIssueTemplate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID шаблона",
                        "name": "templateId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Шаблон удален"
                    },
                    "400": {
                        "description": "Некорректные данные шаблона",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет шаблон задач для проекта",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты (шаблоны задач): обновление шаблона",
                "operationId": "updateIssueTemplate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID шаблона",
                        "name": "templateId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные шаблона",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.IssueTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Шаблон обновлен"
                    },
                    "400": {
                        "description": "Некорректные данные шаблона",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/states/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список состояний, сгруппированных по проектам, для указанного рабочего пространства.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство: получение состояния рабочего пространства",
                "operationId": "getWorkspaceStateList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список состояний, сгруппированных по проектам",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/dto.StateLight"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Рабочее пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/token": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает токен интеграции для указанного рабочего пространства, если пользователь имеет необходимые права доступа.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство (токен): получение токена для пространства",
                "operationId": "getWorkspaceToken",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Токен интеграции рабочего пространства",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Рабочее пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/token/reset/": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Генерирует новый токен интеграции для указанного рабочего пространства.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство (токен): сброс токена для пространства",
                "operationId": "resetWorkspaceToken",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Токен интеграции успешно сброшен",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Ошибка в запросе",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Рабочее пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/user-favorite-docs/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список избранных документов текущего пользователя в рабочем пространстве.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "Doc (Favorites): получение списка избранных документов",
                "operationId": "getFavoriteDocList",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список избранных документов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.DocFavorites"
                            }
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Добавляет указанный документ в список избранных текущего пользователя в рабочем пространстве.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "Doc (Favorites): добавление документа в избранное",
                "operationId": "addDocToFavorites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ID документа для добавления в избранное",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.AddDocToFavoritesRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Добавленный документ в избранных",
                        "schema": {
                            "$ref": "#/definitions/dto.DocFavorites"
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Документ не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/user-favorite-docs/{docId}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет указанный документ из списка избранных текущего пользователя в рабочем пространстве.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Docs"
                ],
                "summary": "Doc (Favorites): удаление документа из избранных",
                "operationId": "removeDocFromFavorites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Id документа",
                        "name": "docId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешно удалено"
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Необходима авторизация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Документ не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/user-favorite-projects/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список избранных проектов текущего пользователя в рабочем пространстве.",
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты: получение списка избранных проектов пользователя",
                "operationId": "getFavoriteProjects",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список избранных проектов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ProjectFavorites"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Добавляет указанный проект в список избранных проектов текущего пользователя в рабочем пространстве.",
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты: добавление проекта в список избранных проектов пользователя",
                "operationId": "addProjectToFavorites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ID проекта для добавления в избранное",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.AddProjectToFavoritesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Проект уже в избранных"
                    },
                    "201": {
                        "description": "Добавленный проект в избранных",
                        "schema": {
                            "$ref": "#/definitions/dto.ProjectFavorites"
                        }
                    },
                    "400": {
                        "description": "Ошибка запроса",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/user-favorite-projects/{projectId}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет указанный проект из списка избранных проектов текущего пользователя в рабочем пространстве.",
                "tags": [
                    "Projects"
                ],
                "summary": "Проекты: удаление проекта из списка избранных проектов пользователя",
                "operationId": "removeProjectFromFavorites",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID проекта для удаления из избранного",
                        "name": "projectId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Проект успешно удален из избранных"
                    },
                    "404": {
                        "description": "Проект не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/auth/workspaces/{workspaceSlug}/workspace-members/me/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает данные участника для текущего пользователя в рабочем пространстве.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Workspace"
                ],
                "summary": "Пространство: получение информации о текущем участнике рабочего пространства",
                "operationId": "getWorkspaceMemberMe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug рабочего пространства",
                        "name": "workspaceSlug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный ответ с данными текущего участника рабочего пространства",
                        "schema": {
                            "$ref": "#/definitions/dto.WorkspaceMember"
                        }
                    },
                    "403": {
                        "description": "Ошибка: доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Ошибка: рабочее пространство не найдено",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/captcha": {
            "get": {
                "description": "Генерирует и возвращает вызов капчи для пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи (управление доступом): запрос капчи для пользователя",
                "operationId": "requestCaptcha",
                "responses": {
                    "200": {
                        "description": "Капча успешно создана",
                        "schema": {
                            "$ref": "#/definitions/altcha.Challenge"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/file/{fileName}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Перенаправляет пользователя на файл, хранящийся в MinIO, по имени файла или ID",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "*/*"
                ],
                "tags": [
                    "Integrations"
                ],
                "summary": "Интеграции: перенаправление на файл в MinIO",
                "operationId": "redirectToMinioFile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Имя файла или ID файла",
                        "name": "fileName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "307": {
                        "description": "Перенаправление на URL файла в MinIO"
                    },
                    "404": {
                        "description": "Файл не найден",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/forms/{formSlug}/": {
            "get": {
                "description": "Получает информацию о форме, без аутентификации",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forms"
                ],
                "summary": "формы: получить форму",
                "operationId": "getFormNoAuth",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug формы",
                        "name": "formSlug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Информация о форме",
                        "schema": {
                            "$ref": "#/definitions/dto.Form"
                        }
                    },
                    "403": {
                        "description": "форма доступна только с аутентификацией",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Форма не найдена",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/forms/{formSlug}/answer/": {
            "post": {
                "description": "Отправляет ответ на форму.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Forms"
                ],
                "summary": "ответы: Отправить ответ",
                "operationId": "createAnswerNoAuth",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Slug формы",
                        "name": "formSlug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные ответа",
                        "name": "answer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/aiplan.reqAnswer"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Отправленный ответ",
                        "schema": {
                            "$ref": "#/definitions/aiplan.respAnswers"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации ответа",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Требуется аутентификация",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "404": {
                        "description": "Форма не найдена",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/sign-in": {
            "post": {
                "description": "Аутентифицирует пользователя с использованием email и пароля, с проверкой капчи",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи (управление доступом): вход пользователя",
                "operationId": "emailLogin",
                "parameters": [
                    {
                        "description": "Данные для входа пользователя",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Токены доступа и информация о пользователе",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Некорректные данные запроса или неудачная проверка капчи",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "401": {
                        "description": "Неудачный вход в систему",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        },
        "/api/sign-up/": {
            "post": {
                "description": "Регистрирует нового пользователя по email, проверяет капчу и отправляет временный пароль по email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Пользователи (управление доступом): регистрация нового пользователя",
                "operationId": "signUp",
                "parameters": [
                    {
                        "description": "Данные для регистрации пользователя",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aiplan.EmailCaptchaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь успешно зарегистрирован"
                    },
                    "400": {
                        "description": "Некорректные данные",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "403": {
                        "description": "Регистрация отключена",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/apierrors.DefinedError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "aiplan.AddDocToFavoritesRequest": {
            "type": "object",
            "required": [
                "doc"
            ],
            "properties": {
                "doc": {
                    "type": "string"
                }
            }
        },
        "aiplan.AddProjectToFavoritesRequest": {
            "type": "object",
            "required": [
                "project"
            ],
            "properties": {
                "project": {
                    "type": "string",
                    "example": "project123"
                }
            }
        },
        "aiplan.CheckProjectIdentifierAvailabilityResponse": {
            "type": "object",
            "properties": {
                "exists": {
                    "type": "integer",
                    "example": 1
                },
                "identifiers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"PROJECT1\"",
                        " \"PROJECT2\"]"
                    ]
                }
            }
        },
        "aiplan.CreateProjectRequest": {
            "type": "object",
            "properties": {
                "cover_image": {
                    "type": "string"
                },
                "default_assignees": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_watchers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "emoji": {
                    "type": "string",
                    "example": "0"
                },
                "estimate": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "project_lead": {
                    "type": "string"
                },
                "public": {
                    "type": "boolean"
                },
                "rules_script": {
                    "type": "string"
                }
            }
        },
        "aiplan.CreateWorkspaceRequest": {
            "type": "object",
            "properties": {
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "aiplan.EmailCaptchaRequest": {
            "type": "object",
            "required": [
                "captcha_payload",
                "email"
            ],
            "properties": {
                "captcha_payload": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "aiplan.FilterParams": {
            "type": "object",
            "properties": {
                "project_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "search_query": {
                    "type": "string"
                },
                "workspace_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aiplan.GetRulesLogfilterRequest": {
            "type": "object",
            "properties": {
                "select": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aiplan.IssueCreateRequest": {
            "type": "object",
            "properties": {
                "assignee_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserLight"
                    },
                    "x-nullable": true
                },
                "assignees_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "author_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.UserLight"
                        }
                    ],
                    "x-nullable": true
                },
                "blocked_issues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.IssueBlockerLight"
                    }
                },
                "blocker_issues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.IssueBlockerLight"
                    }
                },
                "blockers_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "blocks_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "completed_at": {
                    "type": "string",
                    "x-nullable": true
                },
                "created_at": {
                    "type": "string"
                },
                "description_html": {
                    "type": "string"
                },
                "description_stripped": {
                    "type": "string",
                    "x-nullable": true
                },
                "description_type": {
                    "type": "integer"
                },
                "draft": {
                    "type": "boolean"
                },
                "estimate_point": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "issue_inline_attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.FileAsset"
                    }
                },
                "issue_link": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.IssueLinkLight"
                    },
                    "x-nullable": true
                },
                "label_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.LabelLight"
                    },
                    "x-nullable": true
                },
                "labels_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                },
                "parent_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.IssueLight"
                        }
                    ],
                    "x-nullable": true
                },
                "priority": {
                    "type": "string",
                    "x-nullable": true
                },
                "project": {
                    "type": "string"
                },
                "project_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.ProjectLight"
                        }
                    ],
                    "x-nullable": true
                },
                "sequence_id": {
                    "type": "integer"
                },
                "short_url": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string",
                    "x-nullable": true
                },
                "state": {
                    "type": "string",
                    "x-nullable": true
                },
                "state_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.StateLight"
                        }
                    ],
                    "x-nullable": true
                },
                "target_date": {
                    "type": "string",
                    "x-nullable": true
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string",
                    "x-nullable": true
                },
                "url": {
                    "type": "string"
                },
                "watcher_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserLight"
                    },
                    "x-nullable": true
                },
                "watchers_list": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "workspace": {
                    "type": "string"
                },
                "workspace_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.WorkspaceLight"
                        }
                    ],
                    "x-nullable": true
                }
            }
        },
        "aiplan.IssueLinkRequest": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "aiplan.IssueLockResponse": {
            "type": "object",
            "properties": {
                "locked_by": {
                    "$ref": "#/definitions/dto.UserLight"
                },
                "locked_until": {
                    "type": "string"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "aiplan.JiraInfoRequest": {
            "type": "object",
            "properties": {
                "block_link_id": {
                    "type": "string"
                },
                "jira_url": {
                    "type": "string"
                },
                "priorities_mapping": {
                    "$ref": "#/definitions/entity.PrioritiesMapping"
                },
                "relates_link_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "target_workspace_id": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "aiplan.JoinProjectsRequest": {
            "type": "object",
            "properties": {
                "project_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"project1\"",
                        " \"project2\"]"
                    ]
                }
            }
        },
        "aiplan.JoinProjectsSuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Projects joined successfully"
                }
            }
        },
        "aiplan.LinkedIssuesIds": {
            "type": "object",
            "properties": {
                "issue_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aiplan.LoginRequest": {
            "type": "object",
            "properties": {
                "captcha_payload": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "aiplan.NewIssueID": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "aiplan.NotificationIdResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                }
            }
        },
        "aiplan.NotificationViewRequest": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "viewed_all": {
                    "type": "boolean"
                }
            }
        },
        "aiplan.PasswordRequest": {
            "type": "object",
            "required": [
                "confirm_password",
                "new_password"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "aiplan.PasswordResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "aiplan.PostFeedbackRequest": {
            "type": "object",
            "properties": {
                "feedback": {
                    "type": "string"
                },
                "stars": {
                    "type": "integer"
                }
            }
        },
        "aiplan.ReactionRequest": {
            "type": "object",
            "required": [
                "reaction"
            ],
            "properties": {
                "reaction": {
                    "type": "string"
                }
            }
        },
        "aiplan.ResponseSubIssueList": {
            "type": "object",
            "properties": {
                "state_distribution": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "sub_issues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Issue"
                    }
                }
            }
        },
        "aiplan.SubIssuesIds": {
            "type": "object",
            "properties": {
                "sub_issue_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "aiplan.UpdateStateRequest": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "default": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "group_seq_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "sequence": {
                    "type": "integer"
                }
            }
        },
        "aiplan.UserCreateRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "description": "optional",
                    "type": "integer"
                },
                "workspace_id": {
                    "description": "optional",
                    "type": "string"
                }
            }
        },
        "aiplan.UserUpdateRequest": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string",
                    "x-nullable": true
                },
                "last_name": {
                    "type": "string",
                    "x-nullable": true
                },
                "settings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.UserSettings"
                        }
                    ],
                    "x-nullable": true
                },
                "status": {
                    "type": "string",
                    "x-nullable": true
                },
                "status_emoji": {
                    "type": "string",
                    "x-nullable": true
                },
                "status_end_date": {
                    "type": "string",
                    "x-nullable": true
                },
                "telegram_id": {
                    "type": "integer",
                    "x-nullable": true
                },
                "theme": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.Theme"
                        }
                    ],
                    "x-nullable": true
                },
                "user_timezone": {
                    "type": "string",
                    "x-nullable": true
                },
                "username": {
                    "type": "string",
                    "x-nullable": true
                },
                "view_props": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.ViewProps"
                        }
                    ],
                    "x-nullable": true
                }
            }
        },
        "aiplan.projectNotificationRequest": {
            "type": "object",
            "properties": {
                "notification_author_settings_app": {
                    "$ref": "#/definitions/types.ProjectMemberNS"
                },
                "notification_author_settings_email": {
                    "$ref": "#/definitions/types.ProjectMemberNS"
                },
                "notification_author_settings_tg": {
                    "$ref": "#/definitions/types.ProjectMemberNS"
                },
                "notification_settings_app": {
                    "$ref": "#/definitions/types.ProjectMemberNS"
                },
                "notification_settings_email": {
                    "$ref": "#/definitions/types.ProjectMemberNS"
                },
                "notification_settings_tg": {
                    "$ref": "#/definitions/types.ProjectMemberNS"
                }
            }
        },
        "aiplan.reqAnswer": {
            "type": "object",
            "properties": {
                "value": {}
            }
        },
        "aiplan.reqForm": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "auth_require": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string",
                    "x-nullable": true
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.FormFields"
                    }
                },
                "target_project_id": {
                    "type": "string",
                    "x-nullable": true
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "aiplan.requestAddFavorite": {
            "type": "object",
            "properties": {
                "workspace": {
                    "type": "string"
                }
            }
        },
        "aiplan.requestEmailMember": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "aiplan.requestMembersInvite": {
            "type": "object",
            "properties": {
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "email": {
                                "type": "string"
                            },
                            "role": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "aiplan.requestMessage": {
            "type": "object",
            "properties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "msg": {
                    "type": "string"
                },
                "send_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "aiplan.requestRoleMember": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "integer"
                }
            }
        },
        "aiplan.respAnswers": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.FormFields"
                    }
                },
                "form": {
                    "$ref": "#/definitions/dto.FormLight"
                }
            }
        },
        "aiplan.responseLastWorkspace": {
            "type": "object",
            "properties": {
                "project_details": {},
                "workspace_details": {}
            }
        },
        "aiplan.roleUpdRequest": {
            "type": "object",
            "required": [
                "role"
            ],
            "properties": {
                "role": {
                    "type": "integer"
                }
            }
        },
        "altcha.Challenge": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "challenge": {
                    "type": "string"
                },
                "maxNumber": {
                    "type": "integer"
                },
                "salt": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                }
            }
        },
        "apierrors.DefinedError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "ru_error": {
                    "type": "string"
                }
            }
        },
        "dao.PaginationResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "my_entity": {},
                "offset": {
                    "type": "integer"
                },
                "result": {}
            }
        },
        "dto.Attachment": {
            "type": "object",
            "properties": {
                "asset": {
                    "$ref": "#/definitions/dto.FileAsset"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "dto.CommentReaction": {
            "type": "object",
            "properties": {
                "comment_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "reaction": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "dto.Doc": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/dto.UserLight"
                },
                "breadcrumbs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "doc_inline_attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.FileAsset"
                    }
                },
                "draft": {
                    "type": "boolean"
                },
                "editor_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "editor_role": {
                    "type": "integer"
                },
                "editors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserLight"
                    }
                },
                "has_child_docs": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "is_favorite": {
                    "type": "boolean"
                },
                "parent_doc": {
                    "type": "string"
                },
                "reader_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "reader_role": {
                    "type": "integer"
                },
                "readers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserLight"
                    }
                },
                "short_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "update_at": {
                    "type": "string"
                },
                "update_by": {
                    "$ref": "#/definitions/dto.UserLight"
                },
                "url": {
                    "type": "string"
                },
                "watcher_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "watchers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserLight"
                    }
                }
            }
        },
        "dto.DocComment": {
            "type": "object",
            "properties": {
                "actor_detail": {
                    "$ref": "#/definitions/dto.UserLight"
                },
                "comment_attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.FileAsset"
                    }
                },
                "comment_html": {
                    "type": "string"
                },
                "comment_stripped": {
                    "type": "string"
                },
                "comment_type": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "original_comment": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.DocComment"
                        }
                    ],
                    "x-nullable": true
                },
                "reaction_summary": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "reactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CommentReaction"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.DocFavorites": {
            "type": "object",
            "properties": {
                "doc": {
                    "$ref": "#/definitions/dto.DocLight"
                },
                "doc_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "dto.DocLight": {
            "type": "object",
            "properties": {
                "draft": {
                    "type": "boolean"
                },
                "has_child_docs": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "is_favorite": {
                    "type": "boolean"
                },
                "short_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.EntityActivityFull": {
            "type": "object",
            "properties": {
                "actor_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.UserLight"
                        }
                    ],
                    "x-nullable": true
                },
                "created_at": {
                    "type": "string"
                },
                "doc_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.DocLight"
                        }
                    ],
                    "x-nullable": true
                },
                "entity_type": {
                    "type": "string"
                },
                "entity_url": {
                    "type": "string"
                },
                "field": {
                    "type": "string",
                    "x-nullable": true
                },
                "form_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.FormLight"
                        }
                    ],
                    "x-nullable": true
                },
                "id": {
                    "type": "string"
                },
                "issue_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.IssueLight"
                        }
                    ],
                    "x-nullable": true
                },
                "new_entity_detail": {
                    "x-nullable": true
                },
                "new_identifier": {
                    "type": "string",
                    "x-nullable": true
                },
                "new_value": {
                    "type": "string"
                },
                "old_entity_detail": {
                    "x-nullable": true
                },
                "old_identifier": {
                    "type": "string",
                    "x-nullable": true
                },
                "old_value": {
                    "type": "string",
                    "x-nullable": true
                },
                "project_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.ProjectLight"
                        }
                    ],
                    "x-nullable": true
                },
                "state_lag_ms": {
                    "type": "integer"
                },
                "verb": {
                    "type": "string"
                },
                "workspace_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.WorkspaceLight"
                        }
                    ],
                    "x-nullable": true
                }
            }
        },
        "dto.FileAsset": {
            "type": "object",
            "properties": {
                "content_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "dto.Form": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "auth_require": {
                    "type": "boolean"
                },
                "author_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.UserLight"
                        }
                    ],
                    "x-nullable": true
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string",
                    "x-nullable": true
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.FormFields"
                    }
                },
                "id": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "target_project_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.ProjectLight"
                        }
                    ],
                    "x-nullable": true
                },
                "target_project_id": {
                    "type": "string",
                    "x-nullable": true
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "workspace": {
                    "type": "string"
                },
                "workspace_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.WorkspaceLight"
                        }
                    ],
                    "x-nullable": true
                }
            }
        },
        "dto.FormAnswer": {
            "type": "object",
            "properties": {
                "attachment": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.Attachment"
                        }
                    ],
                    "x-nullable": true
                },
                "created_at": {
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.FormFields"
                    }
                },
                "form": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.Form"
                        }
                    ],
                    "x-nullable": true
                },
                "id": {
                    "type": "string"
                },
                "responder": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.UserLight"
                        }
                    ],
                    "x-nullable": true
                },
                "seq_id": {
                    "type": "integer"
                }
            }
        },
        "dto.FormLight": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "auth_require": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string",
                    "x-nullable": true
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.FormFields"
                    }
                },
                "id": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "target_project_id": {
                    "type": "string",
                    "x-nullable": true
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "workspace": {
                    "type": "string"
                }
            }
        },
        "dto.HistoryBody": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "author": {
                    "$ref": "#/definitions/dto.UserLight"
                },
                "crated_at": {
                    "type": "string"
                },
                "current_body": {
                    "type": "string"
                },
                "current_inline_attachment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.FileAsset"
                    }
                },
                "old_body": {
                    "type": "string"
                },
                "old_inline_attachment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.FileAsset"
                    }
                }
            }
        },
        "dto.HistoryBodyLight": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "author": {
                    "$ref": "#/definitions/dto.UserLight"
                },
                "crated_at": {
                    "type": "string"
                }
            }
        },
        "dto.Issue": {
            "type": "object",
            "properties": {
                "assignee_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserLight"
                    },
                    "x-nullable": true
                },
                "author_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.UserLight"
                        }
                    ],
                    "x-nullable": true
                },
                "blocked_issues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.IssueBlockerLight"
                    }
                },
                "blocker_issues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.IssueBlockerLight"
                    }
                },
                "completed_at": {
                    "type": "string",
                    "x-nullable": true
                },
                "created_at": {
                    "type": "string"
                },
                "description_html": {
                    "type": "string"
                },
                "description_stripped": {
                    "type": "string",
                    "x-nullable": true
                },
                "description_type": {
                    "type": "integer"
                },
                "draft": {
                    "type": "boolean"
                },
                "estimate_point": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "issue_inline_attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.FileAsset"
                    }
                },
                "issue_link": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.IssueLinkLight"
                    },
                    "x-nullable": true
                },
                "label_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.LabelLight"
                    },
                    "x-nullable": true
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                },
                "parent_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.IssueLight"
                        }
                    ],
                    "x-nullable": true
                },
                "priority": {
                    "type": "string",
                    "x-nullable": true
                },
                "project": {
                    "type": "string"
                },
                "project_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.ProjectLight"
                        }
                    ],
                    "x-nullable": true
                },
                "sequence_id": {
                    "type": "integer"
                },
                "short_url": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string",
                    "x-nullable": true
                },
                "state": {
                    "type": "string",
                    "x-nullable": true
                },
                "state_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.StateLight"
                        }
                    ],
                    "x-nullable": true
                },
                "target_date": {
                    "type": "string",
                    "x-nullable": true
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string",
                    "x-nullable": true
                },
                "url": {
                    "type": "string"
                },
                "watcher_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserLight"
                    },
                    "x-nullable": true
                },
                "workspace": {
                    "type": "string"
                },
                "workspace_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.WorkspaceLight"
                        }
                    ],
                    "x-nullable": true
                }
            }
        },
        "dto.IssueBlockerLight": {
            "type": "object",
            "properties": {
                "block": {
                    "type": "string"
                },
                "blocked_by": {
                    "type": "string"
                },
                "blocked_issue_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.IssueLight"
                        }
                    ],
                    "x-nullable": true
                },
                "blocker_issue_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.IssueLight"
                        }
                    ],
                    "x-nullable": true
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "dto.IssueComment": {
            "type": "object",
            "properties": {
                "actor_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.UserLight"
                        }
                    ],
                    "x-nullable": true
                },
                "actor_id": {
                    "type": "string",
                    "x-nullable": true
                },
                "comment_attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.FileAsset"
                    }
                },
                "comment_html": {
                    "type": "string"
                },
                "comment_stripped": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "issue_id": {
                    "type": "string"
                },
                "original_comment": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.IssueComment"
                        }
                    ],
                    "x-nullable": true
                },
                "project_id": {
                    "type": "string"
                },
                "reaction_summary": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "reactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CommentReaction"
                    }
                },
                "reply_to_comment_id": {
                    "type": "string",
                    "x-nullable": true
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "dto.IssueCommentLight": {
            "type": "object",
            "properties": {
                "comment_html": {
                    "type": "string"
                },
                "comment_stripped": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.IssueLight": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "string",
                    "x-nullable": true
                },
                "sequence_id": {
                    "type": "integer"
                },
                "short_url": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "x-nullable": true
                },
                "state_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.StateLight"
                        }
                    ],
                    "x-nullable": true
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.IssueLinkLight": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.IssueSearchResult": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "issues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.IssueWithCount"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                }
            }
        },
        "dto.IssueTemplate": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "string"
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "dto.IssueWithCount": {
            "type": "object",
            "properties": {
                "assignee_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserLight"
                    },
                    "x-nullable": true
                },
                "attachment_count": {
                    "type": "integer"
                },
                "author_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.UserLight"
                        }
                    ],
                    "x-nullable": true
                },
                "blocked_issues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.IssueBlockerLight"
                    }
                },
                "blocker_issues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.IssueBlockerLight"
                    }
                },
                "completed_at": {
                    "type": "string",
                    "x-nullable": true
                },
                "created_at": {
                    "type": "string"
                },
                "desc_highlighted": {
                    "type": "string"
                },
                "description_html": {
                    "type": "string"
                },
                "description_stripped": {
                    "type": "string",
                    "x-nullable": true
                },
                "description_type": {
                    "type": "integer"
                },
                "draft": {
                    "type": "boolean"
                },
                "estimate_point": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "issue_inline_attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.FileAsset"
                    }
                },
                "issue_link": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.IssueLinkLight"
                    },
                    "x-nullable": true
                },
                "label_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.LabelLight"
                    },
                    "x-nullable": true
                },
                "link_count": {
                    "type": "integer"
                },
                "linked_issues_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "name_highlighted": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                },
                "parent_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.IssueLight"
                        }
                    ],
                    "x-nullable": true
                },
                "priority": {
                    "type": "string",
                    "x-nullable": true
                },
                "project": {
                    "type": "string"
                },
                "project_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.ProjectLight"
                        }
                    ],
                    "x-nullable": true
                },
                "sequence_id": {
                    "type": "integer"
                },
                "short_url": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string",
                    "x-nullable": true
                },
                "state": {
                    "type": "string",
                    "x-nullable": true
                },
                "state_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.StateLight"
                        }
                    ],
                    "x-nullable": true
                },
                "sub_issues_count": {
                    "type": "integer"
                },
                "target_date": {
                    "type": "string",
                    "x-nullable": true
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string",
                    "x-nullable": true
                },
                "url": {
                    "type": "string"
                },
                "watcher_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserLight"
                    },
                    "x-nullable": true
                },
                "workspace": {
                    "type": "string"
                },
                "workspace_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.WorkspaceLight"
                        }
                    ],
                    "x-nullable": true
                }
            }
        },
        "dto.LabelLight": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "project": {
                    "type": "string"
                }
            }
        },
        "dto.Project": {
            "type": "object",
            "properties": {
                "cover_image": {
                    "type": "string",
                    "x-nullable": true
                },
                "created_at": {
                    "type": "string"
                },
                "current_user_membership": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.ProjectMemberLight"
                        }
                    ],
                    "x-nullable": true
                },
                "default_assignees": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_assignees_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ProjectMemberLight"
                    }
                },
                "default_watchers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_watchers_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ProjectMemberLight"
                    }
                },
                "emoji": {
                    "type": "string",
                    "example": "0"
                },
                "id": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "is_favorite": {
                    "type": "boolean"
                },
                "logo": {
                    "type": "string",
                    "x-nullable": true
                },
                "name": {
                    "type": "string"
                },
                "name_highlighted": {
                    "type": "string"
                },
                "project_lead": {
                    "type": "string"
                },
                "project_lead_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.UserLight"
                        }
                    ],
                    "x-nullable": true
                },
                "public": {
                    "type": "boolean"
                },
                "rules_script": {
                    "type": "string",
                    "x-nullable": true
                },
                "total_members": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "workspace": {
                    "type": "string"
                },
                "workspace_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.WorkspaceLight"
                        }
                    ],
                    "x-nullable": true
                }
            }
        },
        "dto.ProjectFavorites": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "project_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.ProjectLight"
                        }
                    ],
                    "x-nullable": true
                },
                "project_id": {
                    "type": "string"
                }
            }
        },
        "dto.ProjectLight": {
            "type": "object",
            "properties": {
                "cover_image": {
                    "type": "string",
                    "x-nullable": true
                },
                "current_user_membership": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.ProjectMemberLight"
                        }
                    ],
                    "x-nullable": true
                },
                "default_assignees": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_assignees_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ProjectMemberLight"
                    }
                },
                "default_watchers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_watchers_details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ProjectMemberLight"
                    }
                },
                "emoji": {
                    "type": "string",
                    "example": "0"
                },
                "id": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "is_favorite": {
                    "type": "boolean"
                },
                "logo": {
                    "type": "string",
                    "x-nullable": true
                },
                "name": {
                    "type": "string"
                },
                "name_highlighted": {
                    "type": "string"
                },
                "project_lead": {
                    "type": "string"
                },
                "public": {
                    "type": "boolean"
                },
                "total_members": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                },
                "workspace": {
                    "type": "string"
                }
            }
        },
        "dto.ProjectMember": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "is_default_assignee": {
                    "type": "boolean"
                },
                "is_default_watcher": {
                    "type": "boolean"
                },
                "member": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.UserLight"
                        }
                    ],
                    "x-nullable": true
                },
                "member_id": {
                    "type": "string"
                },
                "notification_author_settings_app": {
                    "$ref": "#/definitions/types.ProjectMemberNS"
                },
                "notification_author_settings_email": {
                    "$ref": "#/definitions/types.ProjectMemberNS"
                },
                "notification_author_settings_tg": {
                    "$ref": "#/definitions/types.ProjectMemberNS"
                },
                "notification_settings_app": {
                    "$ref": "#/definitions/types.ProjectMemberNS"
                },
                "notification_settings_email": {
                    "$ref": "#/definitions/types.ProjectMemberNS"
                },
                "notification_settings_tg": {
                    "$ref": "#/definitions/types.ProjectMemberNS"
                },
                "project": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.ProjectLight"
                        }
                    ],
                    "x-nullable": true
                },
                "project_id": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "view_props": {
                    "$ref": "#/definitions/types.ViewProps"
                },
                "workspace_admin": {
                    "type": "boolean"
                }
            }
        },
        "dto.ProjectMemberLight": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "is_default_assignee": {
                    "type": "boolean"
                },
                "is_default_watcher": {
                    "type": "boolean"
                },
                "member": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.UserLight"
                        }
                    ],
                    "x-nullable": true
                },
                "member_id": {
                    "type": "string"
                },
                "project": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.ProjectLight"
                        }
                    ],
                    "x-nullable": true
                },
                "project_id": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                },
                "workspace_admin": {
                    "type": "boolean"
                }
            }
        },
        "dto.ReleaseNoteLight": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "published_at": {
                    "type": "string"
                },
                "tag_name": {
                    "type": "string"
                }
            }
        },
        "dto.RulesLog": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "function_name": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string"
                },
                "issue_detail": {
                    "$ref": "#/definitions/dto.IssueLight"
                },
                "lua_err": {
                    "type": "string",
                    "x-nullable": true
                },
                "msg": {
                    "type": "string"
                },
                "project_detail": {
                    "$ref": "#/definitions/dto.ProjectLight"
                },
                "time": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_detail": {
                    "$ref": "#/definitions/dto.UserLight"
                },
                "workspace_detail": {
                    "$ref": "#/definitions/dto.WorkspaceLight"
                }
            }
        },
        "dto.SearchFilterFull": {
            "type": "object",
            "properties": {
                "author_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.UserLight"
                        }
                    ],
                    "x-nullable": true
                },
                "author_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "filter": {
                    "$ref": "#/definitions/types.IssuesListFilters"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "public": {
                    "type": "boolean"
                },
                "short_url": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.SearchFilterLight": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "filter": {
                    "$ref": "#/definitions/types.IssuesListFilters"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "public": {
                    "type": "boolean"
                },
                "short_url": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.StateLight": {
            "type": "object",
            "properties": {
                "color": {
                    "type": "string"
                },
                "default": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "project": {
                    "type": "string"
                },
                "sequence": {
                    "type": "integer"
                },
                "workspace": {
                    "type": "string"
                }
            }
        },
        "dto.Tariffication": {
            "type": "object",
            "properties": {
                "attachments_allow": {
                    "type": "boolean"
                },
                "issues_limit": {
                    "type": "integer"
                },
                "projects_limit": {
                    "type": "integer"
                },
                "user_detail": {
                    "$ref": "#/definitions/dto.UserLight"
                },
                "user_id": {
                    "type": "string"
                },
                "users_limit": {
                    "type": "integer"
                },
                "workspaces_limit": {
                    "type": "integer"
                }
            }
        },
        "dto.User": {
            "type": "object",
            "properties": {
                "attachments_allow": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "avatar": {
                    "type": "string"
                },
                "avatar_id": {
                    "type": "string",
                    "x-nullable": true
                },
                "blocked_until": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_bot": {
                    "type": "boolean"
                },
                "is_integration": {
                    "type": "boolean"
                },
                "is_onboarded": {
                    "type": "boolean"
                },
                "is_superuser": {
                    "type": "boolean"
                },
                "last_active": {
                    "type": "string",
                    "x-nullable": true
                },
                "last_name": {
                    "type": "string"
                },
                "last_workspace_id": {
                    "type": "string",
                    "x-nullable": true
                },
                "last_workspace_slug": {
                    "type": "string",
                    "x-nullable": true
                },
                "notification_count": {
                    "type": "integer"
                },
                "settings": {
                    "$ref": "#/definitions/types.UserSettings"
                },
                "status": {
                    "type": "string",
                    "x-nullable": true
                },
                "status_emoji": {
                    "type": "string",
                    "x-nullable": true
                },
                "status_end_date": {
                    "type": "string",
                    "x-nullable": true
                },
                "telegram_id": {
                    "type": "integer",
                    "x-nullable": true
                },
                "theme": {
                    "$ref": "#/definitions/types.Theme"
                },
                "user_timezone": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "x-nullable": true
                },
                "view_props": {
                    "$ref": "#/definitions/types.ViewProps"
                }
            }
        },
        "dto.UserFeedback": {
            "type": "object",
            "properties": {
                "feedback": {
                    "type": "string"
                },
                "stars": {
                    "type": "integer"
                },
                "user_detail": {
                    "$ref": "#/definitions/dto.UserLight"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "dto.UserLight": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "avatar_id": {
                    "type": "string",
                    "x-nullable": true
                },
                "blocked_until": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_bot": {
                    "type": "boolean"
                },
                "is_integration": {
                    "type": "boolean"
                },
                "is_onboarded": {
                    "type": "boolean"
                },
                "is_superuser": {
                    "type": "boolean"
                },
                "last_active": {
                    "type": "string",
                    "x-nullable": true
                },
                "last_name": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "x-nullable": true
                },
                "status_emoji": {
                    "type": "string",
                    "x-nullable": true
                },
                "status_end_date": {
                    "type": "string",
                    "x-nullable": true
                },
                "telegram_id": {
                    "type": "integer",
                    "x-nullable": true
                },
                "user_timezone": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "dto.Workspace": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "current_user_membership": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.WorkspaceMember"
                        }
                    ],
                    "x-nullable": true
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_favorite": {
                    "type": "boolean"
                },
                "logo": {
                    "type": "string",
                    "x-nullable": true
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.UserLight"
                        }
                    ],
                    "x-nullable": true
                },
                "owner_id": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.WorkspaceFavorites": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "workspace_detail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.Workspace"
                        }
                    ],
                    "x-nullable": true
                },
                "workspace_id": {
                    "type": "string"
                }
            }
        },
        "dto.WorkspaceLight": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "logo": {
                    "type": "string",
                    "x-nullable": true
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.WorkspaceMember": {
            "type": "object",
            "properties": {
                "editable_by_admin": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "member": {
                    "$ref": "#/definitions/dto.UserLight"
                },
                "member_id": {
                    "type": "string"
                },
                "notification_author_settings_app": {
                    "$ref": "#/definitions/types.WorkspaceMemberNS"
                },
                "notification_author_settings_email": {
                    "$ref": "#/definitions/types.WorkspaceMemberNS"
                },
                "notification_author_settings_tg": {
                    "$ref": "#/definitions/types.WorkspaceMemberNS"
                },
                "notification_settings_app": {
                    "$ref": "#/definitions/types.WorkspaceMemberNS"
                },
                "notification_settings_email": {
                    "$ref": "#/definitions/types.WorkspaceMemberNS"
                },
                "notification_settings_tg": {
                    "$ref": "#/definitions/types.WorkspaceMemberNS"
                },
                "role": {
                    "type": "integer"
                }
            }
        },
        "dto.WorkspaceMemberLight": {
            "type": "object",
            "properties": {
                "editable_by_admin": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "member": {
                    "$ref": "#/definitions/dto.UserLight"
                },
                "member_id": {
                    "type": "string"
                },
                "role": {
                    "type": "integer"
                }
            }
        },
        "dto.WorkspaceWithCount": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "current_user_membership": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.WorkspaceMember"
                        }
                    ],
                    "x-nullable": true
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_favorite": {
                    "type": "boolean"
                },
                "logo": {
                    "type": "string",
                    "x-nullable": true
                },
                "name": {
                    "type": "string"
                },
                "name_highlighted": {
                    "type": "string"
                },
                "owner": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/dto.UserLight"
                        }
                    ],
                    "x-nullable": true
                },
                "owner_id": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "total_members": {
                    "type": "integer"
                },
                "total_projects": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "entity.JiraInfo": {
            "type": "object",
            "properties": {
                "link_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jira.IssueLinkType"
                    }
                },
                "priorities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/jira.Priority"
                    }
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "avatarUrls": {
                                "$ref": "#/definitions/jira.AvatarUrls"
                            },
                            "expand": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "issueTypes": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/jira.IssueType"
                                }
                            },
                            "key": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "projectCategory": {
                                "$ref": "#/definitions/jira.ProjectCategory"
                            },
                            "projectTypeKey": {
                                "type": "string"
                            },
                            "self": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "entity.PrioritiesMapping": {
            "type": "object",
            "properties": {
                "high_id": {
                    "type": "string"
                },
                "low_id": {
                    "type": "string"
                },
                "medium_id": {
                    "type": "string"
                },
                "null_id": {
                    "type": "string"
                },
                "urgent_id": {
                    "type": "string"
                }
            }
        },
        "integrations.Integration": {
            "type": "object",
            "properties": {
                "added": {
                    "type": "boolean"
                },
                "avatar": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "issues_import.FailedAttachment": {
            "type": "object",
            "properties": {
                "attachment_id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "issues_import.ImportStatus": {
            "type": "object",
            "properties": {
                "actor_details": {
                    "$ref": "#/definitions/dto.UserLight"
                },
                "actor_id": {
                    "type": "string"
                },
                "done_issues": {
                    "type": "integer"
                },
                "end_at": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "failed_attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/issues_import.FailedAttachment"
                    }
                },
                "finished": {
                    "type": "boolean"
                },
                "global_progress": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "imported_attachments": {
                    "type": "integer"
                },
                "progress": {
                    "type": "integer"
                },
                "project_key": {
                    "type": "string"
                },
                "stage": {
                    "type": "string"
                },
                "start_at": {
                    "type": "string"
                },
                "target_workspace_id": {
                    "type": "string"
                },
                "total_attachments": {
                    "type": "integer"
                },
                "total_issues": {
                    "type": "integer"
                }
            }
        },
        "jira.AvatarUrls": {
            "type": "object",
            "properties": {
                "16x16": {
                    "type": "string"
                },
                "24x24": {
                    "type": "string"
                },
                "32x32": {
                    "type": "string"
                },
                "48x48": {
                    "type": "string"
                }
            }
        },
        "jira.IssueLinkType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "inward": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "outward": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                }
            }
        },
        "jira.IssueType": {
            "type": "object",
            "properties": {
                "avatarId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "iconUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                },
                "subtask": {
                    "type": "boolean"
                }
            }
        },
        "jira.Priority": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "iconUrl": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                },
                "statusColor": {
                    "type": "string"
                }
            }
        },
        "jira.ProjectCategory": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                }
            }
        },
        "notifications.NotificationDetailResponse": {
            "type": "object",
            "properties": {
                "doc": {
                    "$ref": "#/definitions/dto.DocLight"
                },
                "form": {
                    "$ref": "#/definitions/dto.FormLight"
                },
                "issue": {
                    "$ref": "#/definitions/dto.IssueLight"
                },
                "issue_comment": {
                    "$ref": "#/definitions/dto.IssueCommentLight"
                },
                "project": {
                    "$ref": "#/definitions/dto.ProjectLight"
                },
                "user": {
                    "$ref": "#/definitions/dto.UserLight"
                },
                "workspace": {
                    "$ref": "#/definitions/dto.WorkspaceLight"
                }
            }
        },
        "notifications.NotificationResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "data": {},
                "detail": {
                    "$ref": "#/definitions/notifications.NotificationDetailResponse"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "viewed": {
                    "description": "NewEntity any                        `json:\"new_entity,omitempty\"`\nOldEntity any                        `json:\"old_entity,omitempty\"`",
                    "type": "boolean"
                }
            }
        },
        "types.ActivityTable": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/types.ActivityTableDay"
            }
        },
        "types.ActivityTableDay": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "weekday": {
                    "$ref": "#/definitions/types.WeekdayShort"
                }
            }
        },
        "types.FormFields": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "validate": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/types.ValidationRule"
                        }
                    ],
                    "x-nullable": true
                },
                "value": {}
            }
        },
        "types.IssuesListFilters": {
            "type": "object",
            "properties": {
                "assigned_to_me": {
                    "type": "boolean"
                },
                "assignees": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "authored_by_me": {
                    "type": "boolean"
                },
                "authors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "only_active": {
                    "type": "boolean"
                },
                "priorities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "search_query": {
                    "type": "string"
                },
                "states": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "watched_by_me": {
                    "type": "boolean"
                },
                "watchers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "workspace_slugs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "workspaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "types.ProjectMemberNS": {
            "type": "object",
            "properties": {
                "disable_assignees": {
                    "type": "boolean"
                },
                "disable_attachments": {
                    "type": "boolean"
                },
                "disable_blockedBy": {
                    "type": "boolean"
                },
                "disable_blocks": {
                    "type": "boolean"
                },
                "disable_comments": {
                    "type": "boolean"
                },
                "disable_deadline": {
                    "type": "boolean"
                },
                "disable_desc": {
                    "type": "boolean"
                },
                "disable_issue_new": {
                    "type": "boolean"
                },
                "disable_issue_transfer": {
                    "type": "boolean"
                },
                "disable_labels": {
                    "type": "boolean"
                },
                "disable_linked": {
                    "type": "boolean"
                },
                "disable_links": {
                    "type": "boolean"
                },
                "disable_name": {
                    "type": "boolean"
                },
                "disable_parent": {
                    "type": "boolean"
                },
                "disable_priority": {
                    "type": "boolean"
                },
                "disable_project_default_assignee": {
                    "type": "boolean"
                },
                "disable_project_default_watcher": {
                    "type": "boolean"
                },
                "disable_project_identifier": {
                    "type": "boolean"
                },
                "disable_project_label": {
                    "type": "boolean"
                },
                "disable_project_logo": {
                    "type": "boolean"
                },
                "disable_project_member": {
                    "type": "boolean"
                },
                "disable_project_name": {
                    "type": "boolean"
                },
                "disable_project_owner": {
                    "type": "boolean"
                },
                "disable_project_public": {
                    "type": "boolean"
                },
                "disable_project_role": {
                    "type": "boolean"
                },
                "disable_project_status": {
                    "type": "boolean"
                },
                "disable_project_template": {
                    "type": "boolean"
                },
                "disable_state": {
                    "type": "boolean"
                },
                "disable_sub_issue": {
                    "type": "boolean"
                },
                "disable_targetDate": {
                    "type": "boolean"
                },
                "disable_watchers": {
                    "type": "boolean"
                },
                "notify_before_deadline": {
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "types.Theme": {
            "type": "object",
            "properties": {
                "contrast": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "dark": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "open_in_new": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "system": {
                    "type": "boolean",
                    "x-nullable": true
                }
            }
        },
        "types.UserSettings": {
            "type": "object",
            "properties": {
                "app_notification_mute": {
                    "type": "boolean"
                },
                "deadline_notification": {
                    "type": "integer"
                },
                "email_notification_mute": {
                    "type": "boolean"
                },
                "telegram_notification_mute": {
                    "type": "boolean"
                }
            }
        },
        "types.ValidationRule": {
            "type": "object",
            "properties": {
                "opt": {
                    "type": "array",
                    "items": {}
                },
                "validation_type": {
                    "type": "string"
                },
                "value_type": {
                    "type": "string"
                }
            }
        },
        "types.ViewFilters": {
            "type": "object",
            "properties": {
                "group_by": {
                    "type": "string"
                },
                "orderDesc": {
                    "type": "boolean"
                },
                "order_by": {
                    "type": "string"
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "states": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "workspaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "types.ViewProps": {
            "type": "object",
            "properties": {
                "activeTab": {
                    "type": "string"
                },
                "autoSave": {
                    "type": "boolean"
                },
                "columns_to_show": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "draft": {
                    "type": "boolean"
                },
                "filters": {
                    "$ref": "#/definitions/types.ViewFilters"
                },
                "group_tables_hide": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "issueView": {
                    "type": "string",
                    "enum": [
                        "list",
                        "kanban",
                        "calendar",
                        "gantt_chart"
                    ]
                },
                "page_size": {
                    "type": "integer",
                    "x-nullable": true
                },
                "showEmptyGroups": {
                    "type": "boolean"
                },
                "showOnlyActive": {
                    "type": "boolean"
                },
                "showSubIssues": {
                    "type": "boolean"
                }
            }
        },
        "types.WeekdayShort": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
            ],
            "x-enum-varnames": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
            ]
        },
        "types.WorkspaceMemberNS": {
            "type": "object",
            "properties": {
                "disable_doc_attachment": {
                    "type": "boolean"
                },
                "disable_doc_comment": {
                    "type": "boolean"
                },
                "disable_doc_create": {
                    "type": "boolean"
                },
                "disable_doc_delete": {
                    "type": "boolean"
                },
                "disable_doc_desc": {
                    "type": "boolean"
                },
                "disable_doc_editor": {
                    "type": "boolean"
                },
                "disable_doc_move": {
                    "type": "boolean"
                },
                "disable_doc_reader": {
                    "type": "boolean"
                },
                "disable_doc_role": {
                    "type": "boolean"
                },
                "disable_doc_title": {
                    "type": "boolean"
                },
                "disable_doc_watchers": {
                    "type": "boolean"
                },
                "disable_workspace_desc": {
                    "type": "boolean"
                },
                "disable_workspace_doc": {
                    "type": "boolean"
                },
                "disable_workspace_form": {
                    "type": "boolean"
                },
                "disable_workspace_integration": {
                    "type": "boolean"
                },
                "disable_workspace_logo": {
                    "type": "boolean"
                },
                "disable_workspace_member": {
                    "type": "boolean"
                },
                "disable_workspace_name": {
                    "type": "boolean"
                },
                "disable_workspace_owner": {
                    "type": "boolean"
                },
                "disable_workspace_project": {
                    "type": "boolean"
                },
                "disable_workspace_role": {
                    "type": "boolean"
                },
                "disable_workspace_token": {
                    "type": "boolean"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}